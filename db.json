{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/AdvertisingAndDiscovery.png","path":"images/AdvertisingAndDiscovery.png","modified":0,"renderable":0},{"_id":"source/images/CBObjects_PeripheralSide.png","path":"images/CBObjects_PeripheralSide.png","modified":0,"renderable":0},{"_id":"source/images/CBDevices1.png","path":"images/CBDevices1.png","modified":0,"renderable":0},{"_id":"source/images/CBObjects_CentralSide.png","path":"images/CBObjects_CentralSide.png","modified":0,"renderable":0},{"_id":"source/images/CBPeripheralData.png","path":"images/CBPeripheralData.png","modified":0,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"source/images/coreAnimation.png","path":"images/coreAnimation.png","modified":0,"renderable":0},{"_id":"source/images/TreeOfServicesAndCharacteristics_Remote.png","path":"images/TreeOfServicesAndCharacteristics_Remote.png","modified":0,"renderable":0},{"_id":"source/images/TreeOfServicesAndCharacteristics_Local.png","path":"images/TreeOfServicesAndCharacteristics_Local.png","modified":0,"renderable":0},{"_id":"source/images/CBPeripheral.jpg","path":"images/CBPeripheral.jpg","modified":0,"renderable":0},{"_id":"source/images/CBCentral.jpg","path":"images/CBCentral.jpg","modified":0,"renderable":0},{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"1688d33f93ffb280a9a74e8f3568150c0f862de6","modified":1493024068000},{"_id":"source/CNAME","hash":"db51a98b54f019568c2a4537b0065ede3b32f07f","modified":1493008314000},{"_id":"source/_posts/.DS_Store","hash":"a4daede4230acd283ccf82265942b7ad60e08cd9","modified":1493022375000},{"_id":"source/categories/index.md","hash":"82aabc29e35d49f988fbf35747c107dc04d5feab","modified":1493008314000},{"_id":"source/_posts/iOS动画.md","hash":"446f1e48f869dd1d864e3224b0427ca4b01cb94c","modified":1493371250000},{"_id":"source/_posts/hello-world.md","hash":"3f39e952650eed540c95854c6eec04cf83f1f718","modified":1493083379000},{"_id":"source/about/index.md","hash":"19bb5423e8274b7ab308be93d291333fc3620814","modified":1493009804000},{"_id":"source/_posts/iOS蓝牙开发-三.md","hash":"d60a94ef3dd6671497b18584640b4ead0e4c3234","modified":1493173007000},{"_id":"themes/hexo-theme-next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1493008314000},{"_id":"source/_posts/iOS蓝牙开发-二.md","hash":"802a7412430c1e9ee2808164e6dc0dac2af2f1e8","modified":1493173313000},{"_id":"themes/hexo-theme-next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1493008314000},{"_id":"themes/hexo-theme-next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1493008314000},{"_id":"themes/hexo-theme-next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1493008314000},{"_id":"themes/hexo-theme-next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1493008314000},{"_id":"themes/hexo-theme-next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1493008314000},{"_id":"source/_posts/iOS蓝牙开发-一.md","hash":"f47ae8235e1766c20fdd386a63c145e0110b05f4","modified":1493088035000},{"_id":"themes/hexo-theme-next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1493008314000},{"_id":"themes/hexo-theme-next/.DS_Store","hash":"98104652359d02fefa6c34fb31b6d4d9cd0c2262","modified":1493023806000},{"_id":"themes/hexo-theme-next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1493008314000},{"_id":"themes/hexo-theme-next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1493008314000},{"_id":"themes/hexo-theme-next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1493008314000},{"_id":"themes/hexo-theme-next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1493008314000},{"_id":"themes/hexo-theme-next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1493008314000},{"_id":"themes/hexo-theme-next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1493008314000},{"_id":"themes/hexo-theme-next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1493008314000},{"_id":"source/tags/index.md","hash":"b719c267562475795a9a93dbd4f674ca07536bec","modified":1493008314000},{"_id":"source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1493087954000},{"_id":"source/images/AdvertisingAndDiscovery.png","hash":"961af7281d5a124f1d1f4e6c52fb2d26c4170b2d","modified":1493086112000},{"_id":"themes/hexo-theme-next/_config.yml","hash":"380f6851a9a882f707092d118ce121cdbb285130","modified":1493083495000},{"_id":"themes/hexo-theme-next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1493008314000},{"_id":"source/images/CBObjects_PeripheralSide.png","hash":"8063880739bf48daa5d86bdf077a21fe1d152f5f","modified":1493086846000},{"_id":"source/images/CBDevices1.png","hash":"565f6c331c58976d4b628474134cc626fb494328","modified":1493026641000},{"_id":"source/images/CBObjects_CentralSide.png","hash":"e85f7ff0271533058e8be23635be567609a25b32","modified":1493086651000},{"_id":"source/images/CBPeripheralData.png","hash":"de25cba0f873f7b262c8900cff2c946cb19a8b2d","modified":1493087955000},{"_id":"source/images/avatar.jpg","hash":"1e877053f3b670310cfc2c572c074877dbc3fb53","modified":1493008314000},{"_id":"source/images/coreAnimation.png","hash":"2850c15de43ee1beea95b5e1d17f1688858d8b15","modified":1493371159000},{"_id":"source/images/TreeOfServicesAndCharacteristics_Remote.png","hash":"63b10df6289146ee2f09120db866a221b7b71a59","modified":1493086733000},{"_id":"themes/hexo-theme-next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1493008314000},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE.md","hash":"fdd63b77472612337309eb93ec415a059b90756b","modified":1493008314000},{"_id":"themes/hexo-theme-next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1493008314000},{"_id":"themes/hexo-theme-next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1493008314000},{"_id":"themes/hexo-theme-next/scripts/.DS_Store","hash":"2ecca5dd0b7260968763bb4ded8695e5748d3d0e","modified":1493023691000},{"_id":"themes/hexo-theme-next/source/.DS_Store","hash":"497a22c1b44426182974566cd0d9e7ebb9602fd7","modified":1493023673000},{"_id":"source/images/TreeOfServicesAndCharacteristics_Local.png","hash":"cc8c9c7d960247250a814e3c0db2b4468bc8d8a7","modified":1493086895000},{"_id":"source/images/CBPeripheral.jpg","hash":"d4420ea2357b47282f663b3639e3ce5b23ca59e3","modified":1493172580000},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1493008314000},{"_id":"themes/hexo-theme-next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_layout.swig","hash":"9d1a23a6add6f3d0f88c2d17979956f14aaa37a4","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/.DS_Store","hash":"6128ed33b1dd4d5bf7fabb17e1cfca6cdb172341","modified":1493023828000},{"_id":"themes/hexo-theme-next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/schedule.swig","hash":"234dc8c3b9e276e7811c69011efd5d560519ef19","modified":1493008314000},{"_id":"source/images/CBCentral.jpg","hash":"4159824840578932fae36da1b6f2a27b7723f082","modified":1493172603000},{"_id":"themes/hexo-theme-next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1493008314000},{"_id":"themes/hexo-theme-next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1493008314000},{"_id":"themes/hexo-theme-next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493008314000},{"_id":"themes/hexo-theme-next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1493008314000},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1493008314000},{"_id":"themes/hexo-theme-next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1493008314000},{"_id":"themes/hexo-theme-next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1493008314000},{"_id":"themes/hexo-theme-next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1493008314000},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/.DS_Store","hash":"bbd874d841ee8ed19a25b4fd8382ed8fc6f2c115","modified":1493023851000},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/.DS_Store","hash":"bd7c5ffc965c42df1b10ea6b51aa93e782056006","modified":1493023862000},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_macro/post.swig","hash":"640b431eccbbd27f10c6781f33db5ea9a6e064de","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.swig","hash":"911b99ba0445b2c07373128d87a4ef2eb7de341a","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/comments.swig","hash":"1c7d3c975e499b9aa3119d6724b030b7b00fc87e","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/.DS_Store","hash":"ac37a342cd76e1cbf8a9794d8d235f01f6298ca0","modified":1493023822000},{"_id":"themes/hexo-theme-next/source/lib/.DS_Store","hash":"a2b9c5f4bd72212a8b28bf341e408e9883b587b4","modified":1493023891000},{"_id":"themes/hexo-theme-next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_scripts/.DS_Store","hash":"499d9587043d09cd6ba79b01f972a0a284b0c9f3","modified":1493023828000},{"_id":"themes/hexo-theme-next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.swig","hash":"55491984964175176e054661a7326e85fa83a7a0","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/.DS_Store","hash":"8b223f9f320cecb05589fcb165371d69a2af2eef","modified":1493023834000},{"_id":"themes/hexo-theme-next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"28a7f84242ca816a6452a0a79669ca963d824607","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","hash":"2041eae5ac81c392067bfbd1bba4399cb37beea1","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/.DS_Store","hash":"741f0f6de4a16ba2e97985b249c7d6c30c7caf70","modified":1493023862000},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.DS_Store","hash":"9457f542cf2c3f2a50b9ecd64858fc6f50b0d0c4","modified":1493023875000},{"_id":"themes/hexo-theme-next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/.DS_Store","hash":"38ed63ae8c933070994d471b4a7c9f52865d3d76","modified":1493023851000},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/.DS_Store","hash":"8f88ccc54ec777df39e223a0f6f44dac6848d878","modified":1493023880000},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b614b73ba49ca9136fed7c387ee8df72fe65118f","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.DS_Store","hash":"3037d5331d92d3f549f33102664cadfff9459707","modified":1493023885000},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.swig","hash":"2d1075f4cabcb3956b7b84a8e210f5a66f0a5562","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/search/localsearch.swig","hash":"f4dbd4c896e6510ded8ebe05394c28f8a86e71bf","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/.DS_Store","hash":"54ff9c83b70578907bc3bcb14a507c312f472948","modified":1493023880000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1493008314000},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-expand.styl","hash":"c196401747019d389da09b7a0fe7f27e3a0ec01f","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post.styl","hash":"8c0276883398651336853d5ec0e9da267a00dd86","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/localsearch.styl","hash":"173490e21bece35a34858e8e534cf86e34561350","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1493008314000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1493008314000},{"_id":"public/search.xml","hash":"ef586f74f4c24e4396407b2f01bb2e8500cb03e3","modified":1493371258114},{"_id":"public/about/index.html","hash":"6d30c39c325e7d7b8d93c5cfe600a2fefb500e40","modified":1493371258184},{"_id":"public/tags/index.html","hash":"eb75a1831ec35987ad4acbe9d5dafd4058c45f9d","modified":1493371258184},{"_id":"public/categories/index.html","hash":"8750bf1eca1f23058628b7dc862c17d1ea8905a1","modified":1493371258185},{"_id":"public/2017/04/14/hello-world/index.html","hash":"3f515051c8acfb5bf077ad629f6356c7e22ded21","modified":1493371258185},{"_id":"public/2017/04/24/iOS蓝牙开发-一/index.html","hash":"29b0200f6efa48f701759910746d915f3f554c07","modified":1493371258185},{"_id":"public/2017/04/25/iOS蓝牙开发-二/index.html","hash":"26da40f0ccfccd3067e724ab478c79b62c0af857","modified":1493371258185},{"_id":"public/2017/04/25/iOS蓝牙开发-三/index.html","hash":"01a550e8eda41d312b63419f59342321d525f909","modified":1493371258185},{"_id":"public/2017/04/28/iOS动画/index.html","hash":"9ace96c64f766d87c43b690825500a84a4920734","modified":1493371258186},{"_id":"public/archives/index.html","hash":"76b4e5bb5aa7bc178ec021ee1040a2c211a81722","modified":1493371258186},{"_id":"public/archives/2017/index.html","hash":"55e36a7642bdc6676fa28837f69e9978c1780922","modified":1493371258187},{"_id":"public/archives/2017/04/index.html","hash":"454a94b988b60513f0b7ed83a8a5baff6979560d","modified":1493371258187},{"_id":"public/categories/iOS蓝牙开发/index.html","hash":"209a33a984d9ab58405b6946924e28c3087f0472","modified":1493371258187},{"_id":"public/categories/iOS动画/index.html","hash":"e283baf3c4ee6bbbcbcfd98ec76545fe376c1c89","modified":1493371258187},{"_id":"public/index.html","hash":"72b053d001d98bef8e9ccc57234f7f0866195d25","modified":1493371258207},{"_id":"public/CNAME","hash":"db51a98b54f019568c2a4537b0065ede3b32f07f","modified":1493371258207},{"_id":"public/images/AdvertisingAndDiscovery.png","hash":"961af7281d5a124f1d1f4e6c52fb2d26c4170b2d","modified":1493371258207},{"_id":"public/images/CBObjects_PeripheralSide.png","hash":"8063880739bf48daa5d86bdf077a21fe1d152f5f","modified":1493371258207},{"_id":"public/images/CBDevices1.png","hash":"565f6c331c58976d4b628474134cc626fb494328","modified":1493371258207},{"_id":"public/images/CBObjects_CentralSide.png","hash":"e85f7ff0271533058e8be23635be567609a25b32","modified":1493371258207},{"_id":"public/images/CBPeripheralData.png","hash":"de25cba0f873f7b262c8900cff2c946cb19a8b2d","modified":1493371258207},{"_id":"public/images/avatar.jpg","hash":"1e877053f3b670310cfc2c572c074877dbc3fb53","modified":1493371258207},{"_id":"public/images/TreeOfServicesAndCharacteristics_Remote.png","hash":"63b10df6289146ee2f09120db866a221b7b71a59","modified":1493371258208},{"_id":"public/images/TreeOfServicesAndCharacteristics_Local.png","hash":"cc8c9c7d960247250a814e3c0db2b4468bc8d8a7","modified":1493371258208},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1493371258208},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1493371258208},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1493371258208},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1493371258208},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1493371258208},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1493371258208},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1493371258208},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1493371258208},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1493371258208},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1493371258208},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1493371258208},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1493371258208},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1493371258208},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1493371258208},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1493371258208},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1493371258208},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1493371258208},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1493371258208},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1493371258208},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1493371258208},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1493371258208},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1493371258208},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1493371258208},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1493371258208},{"_id":"public/images/coreAnimation.png","hash":"2850c15de43ee1beea95b5e1d17f1688858d8b15","modified":1493371259081},{"_id":"public/images/CBPeripheral.jpg","hash":"d4420ea2357b47282f663b3639e3ce5b23ca59e3","modified":1493371259082},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1493371259090},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1493371259090},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1493371259098},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1493371259098},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1493371259098},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1493371259098},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1493371259098},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1493371259098},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1493371259098},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1493371259098},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1493371259098},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1493371259098},{"_id":"public/js/src/utils.js","hash":"2041eae5ac81c392067bfbd1bba4399cb37beea1","modified":1493371259098},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1493371259098},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1493371259098},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"b614b73ba49ca9136fed7c387ee8df72fe65118f","modified":1493371259098},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1493371259098},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1493371259098},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1493371259099},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1493371259099},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1493371259099},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1493371259099},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1493371259099},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1493371259099},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1493371259099},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1493371259099},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1493371259099},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1493371259099},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1493371259099},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1493371259099},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1493371259099},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1493371259099},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1493371259099},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1493371259099},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1493371259099},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1493371259099},{"_id":"public/css/main.css","hash":"d070e5581c0dae1d9dd5f3a87d85531e3941c492","modified":1493371259099},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1493371259099},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1493371259099},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1493371259099},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1493371259099},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1493371259099},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1493371259099},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1493371259100},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1493371259100},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1493371259100},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1493371259100},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1493371259100},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1493371259100},{"_id":"public/images/CBCentral.jpg","hash":"4159824840578932fae36da1b6f2a27b7723f082","modified":1493371259100},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1493371259100},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1493371259100},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1493371259100},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1493371259119}],"Category":[{"name":"iOS蓝牙开发","_id":"cj21mos670006ik7a8fnkd9eh"},{"name":"iOS动画","_id":"cj21mos6n000dik7ati2b2ceh"}],"Data":[],"Page":[{"title":"分类","date":"2017-04-19T04:48:14.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-04-19 12:48:14\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-04-24T04:31:54.000Z","path":"categories/index.html","layout":"page","_id":"cj21mos5s0000ik7av5f53mdt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"简介","date":"2017-04-19T07:16:09.000Z","type":"about","comments":0,"_content":"90后，程序员，现在从事iOS开发，闲暇时间接触过python、Android、前端、后台。希望借此博客进一步提升技术，离成功近一点。\n","source":"about/index.md","raw":"---\ntitle: 简介\ndate: 2017-04-19 15:16:09\ntype: \"about\"\ncomments: false\n---\n90后，程序员，现在从事iOS开发，闲暇时间接触过python、Android、前端、后台。希望借此博客进一步提升技术，离成功近一点。\n","updated":"2017-04-24T04:56:44.000Z","path":"about/index.html","layout":"page","_id":"cj21mos5y0002ik7abeejtg0s","content":"<p>90后，程序员，现在从事iOS开发，闲暇时间接触过python、Android、前端、后台。希望借此博客进一步提升技术，离成功近一点。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>90后，程序员，现在从事iOS开发，闲暇时间接触过python、Android、前端、后台。希望借此博客进一步提升技术，离成功近一点。</p>\n"},{"title":"标签","date":"2017-04-19T05:08:12.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-04-19 13:08:12\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-04-24T04:31:54.000Z","path":"tags/index.html","layout":"page","_id":"cj21mos630004ik7ac1v8f0u2","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","date":"2017-04-14T02:12:09.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).<!-- more -->\n\n## Quick Start\n---\n### Init\n```bash\n$ hexo init\n```\nMore info: [Setup](https://hexo.io/docs/setup.html)\n\n### Create a new page\n```bash\n$ hexo new page about\n```\nMore info: [Page](http://theme-next.iissnan.com/theme-settings.html)\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n## Hexo Theme\n---\n\n### Installation\n1. Get it from GitHub\n```bash\n $ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n2. Add it to `_config.yml`\n```bash\n theme: next\n```\n### Tags Page\n>Add a tags page contains all tags in your site.\n\n1. Create a page name `tags`\n```bash\nhexo new page \"tags\"\n```\n\n2. Edit tags page, set page type to `tags`\n```yml\ntitle: All tags\ndate: 2017-04-24 16:01:05\ntype: tags\n```\n3. Add `tags` to theme `_config.yml`\n```yml\nmenu:\n  home: /\n  archives: /archives\n  tags: /tags\n```\n\n### Categories page\n> Add a categories page contains all categories in your site\n\n1. Create a page named `categories`\n```bash\nhexo new page \"categories\"\n```\n2. Edit categories page, set page type to `categories`\n```yml\ntitle: All categories\ndate: 2017-04-24 16:02:15\ntype: \"categories\"\n```\n3. Add categories to theme `_config.yml`\n```yml\nmenu:\n  home: /\n  archives: /archives\n  categories: /categories\n```\n\n### Social Media\n> NexT can automatically add links to your Social Media accounts:\n\n```yml\nsocial:\n  GitHub: your-github-url\n  Twitter: your-twitter-url\n  Weibo: your-weibo-url\n  DouBan: your-douban-url\n  ZhiHu: your-zhihu-url\n```\n\nMore info: [NexT](https://github.com/iissnan/hexo-theme-next)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2017-04-14 10:12:09\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).<!-- more -->\n\n## Quick Start\n---\n### Init\n```bash\n$ hexo init\n```\nMore info: [Setup](https://hexo.io/docs/setup.html)\n\n### Create a new page\n```bash\n$ hexo new page about\n```\nMore info: [Page](http://theme-next.iissnan.com/theme-settings.html)\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n## Hexo Theme\n---\n\n### Installation\n1. Get it from GitHub\n```bash\n $ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n2. Add it to `_config.yml`\n```bash\n theme: next\n```\n### Tags Page\n>Add a tags page contains all tags in your site.\n\n1. Create a page name `tags`\n```bash\nhexo new page \"tags\"\n```\n\n2. Edit tags page, set page type to `tags`\n```yml\ntitle: All tags\ndate: 2017-04-24 16:01:05\ntype: tags\n```\n3. Add `tags` to theme `_config.yml`\n```yml\nmenu:\n  home: /\n  archives: /archives\n  tags: /tags\n```\n\n### Categories page\n> Add a categories page contains all categories in your site\n\n1. Create a page named `categories`\n```bash\nhexo new page \"categories\"\n```\n2. Edit categories page, set page type to `categories`\n```yml\ntitle: All categories\ndate: 2017-04-24 16:02:15\ntype: \"categories\"\n```\n3. Add categories to theme `_config.yml`\n```yml\nmenu:\n  home: /\n  archives: /archives\n  categories: /categories\n```\n\n### Social Media\n> NexT can automatically add links to your Social Media accounts:\n\n```yml\nsocial:\n  GitHub: your-github-url\n  Twitter: your-twitter-url\n  Weibo: your-weibo-url\n  DouBan: your-douban-url\n  ZhiHu: your-zhihu-url\n```\n\nMore info: [NexT](https://github.com/iissnan/hexo-theme-next)\n","slug":"hello-world","published":1,"updated":"2017-04-25T01:22:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21mos5u0001ik7aqz1fhejy","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.<a id=\"more\"></a></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><hr>\n<h3 id=\"Init\"><a href=\"#Init\" class=\"headerlink\" title=\"Init\"></a>Init</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/setup.html\" target=\"_blank\" rel=\"external\">Setup</a></p>\n<h3 id=\"Create-a-new-page\"><a href=\"#Create-a-new-page\" class=\"headerlink\" title=\"Create a new page\"></a>Create a new page</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new page about</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://theme-next.iissnan.com/theme-settings.html\" target=\"_blank\" rel=\"external\">Page</a></p>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n<h2 id=\"Hexo-Theme\"><a href=\"#Hexo-Theme\" class=\"headerlink\" title=\"Hexo Theme\"></a>Hexo Theme</h2><hr>\n<h3 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h3><ol>\n<li><p>Get it from GitHub</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>\n</li>\n<li><p>Add it to <code>_config.yml</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">theme: next</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Tags-Page\"><a href=\"#Tags-Page\" class=\"headerlink\" title=\"Tags Page\"></a>Tags Page</h3><blockquote>\n<p>Add a tags page contains all tags in your site.</p>\n</blockquote>\n<ol>\n<li><p>Create a page name <code>tags</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page <span class=\"string\">\"tags\"</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Edit tags page, set page type to <code>tags</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">All</span> <span class=\"string\">tags</span></div><div class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2017</span><span class=\"bullet\">-04</span><span class=\"bullet\">-24</span> <span class=\"number\">16</span><span class=\"string\">:01:05</span></div><div class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">tags</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Add <code>tags</code> to theme <code>_config.yml</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">menu:</span></div><div class=\"line\"><span class=\"attr\">  home:</span> <span class=\"string\">/</span></div><div class=\"line\"><span class=\"attr\">  archives:</span> <span class=\"string\">/archives</span></div><div class=\"line\"><span class=\"attr\">  tags:</span> <span class=\"string\">/tags</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Categories-page\"><a href=\"#Categories-page\" class=\"headerlink\" title=\"Categories page\"></a>Categories page</h3><blockquote>\n<p>Add a categories page contains all categories in your site</p>\n</blockquote>\n<ol>\n<li><p>Create a page named <code>categories</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page <span class=\"string\">\"categories\"</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Edit categories page, set page type to <code>categories</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">All</span> <span class=\"string\">categories</span></div><div class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2017</span><span class=\"bullet\">-04</span><span class=\"bullet\">-24</span> <span class=\"number\">16</span><span class=\"string\">:02:15</span></div><div class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">\"categories\"</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Add categories to theme <code>_config.yml</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">menu:</span></div><div class=\"line\"><span class=\"attr\">  home:</span> <span class=\"string\">/</span></div><div class=\"line\"><span class=\"attr\">  archives:</span> <span class=\"string\">/archives</span></div><div class=\"line\"><span class=\"attr\">  categories:</span> <span class=\"string\">/categories</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Social-Media\"><a href=\"#Social-Media\" class=\"headerlink\" title=\"Social Media\"></a>Social Media</h3><blockquote>\n<p>NexT can automatically add links to your Social Media accounts:</p>\n</blockquote>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">social:</span></div><div class=\"line\"><span class=\"attr\">  GitHub:</span> <span class=\"string\">your-github-url</span></div><div class=\"line\"><span class=\"attr\">  Twitter:</span> <span class=\"string\">your-twitter-url</span></div><div class=\"line\"><span class=\"attr\">  Weibo:</span> <span class=\"string\">your-weibo-url</span></div><div class=\"line\"><span class=\"attr\">  DouBan:</span> <span class=\"string\">your-douban-url</span></div><div class=\"line\"><span class=\"attr\">  ZhiHu:</span> <span class=\"string\">your-zhihu-url</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"external\">NexT</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.","more":"</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><hr>\n<h3 id=\"Init\"><a href=\"#Init\" class=\"headerlink\" title=\"Init\"></a>Init</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/setup.html\">Setup</a></p>\n<h3 id=\"Create-a-new-page\"><a href=\"#Create-a-new-page\" class=\"headerlink\" title=\"Create a new page\"></a>Create a new page</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new page about</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://theme-next.iissnan.com/theme-settings.html\">Page</a></p>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n<h2 id=\"Hexo-Theme\"><a href=\"#Hexo-Theme\" class=\"headerlink\" title=\"Hexo Theme\"></a>Hexo Theme</h2><hr>\n<h3 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h3><ol>\n<li><p>Get it from GitHub</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>\n</li>\n<li><p>Add it to <code>_config.yml</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">theme: next</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Tags-Page\"><a href=\"#Tags-Page\" class=\"headerlink\" title=\"Tags Page\"></a>Tags Page</h3><blockquote>\n<p>Add a tags page contains all tags in your site.</p>\n</blockquote>\n<ol>\n<li><p>Create a page name <code>tags</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page <span class=\"string\">\"tags\"</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Edit tags page, set page type to <code>tags</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">All</span> <span class=\"string\">tags</span></div><div class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2017</span><span class=\"bullet\">-04</span><span class=\"bullet\">-24</span> <span class=\"number\">16</span><span class=\"string\">:01:05</span></div><div class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">tags</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Add <code>tags</code> to theme <code>_config.yml</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">menu:</span></div><div class=\"line\"><span class=\"attr\">  home:</span> <span class=\"string\">/</span></div><div class=\"line\"><span class=\"attr\">  archives:</span> <span class=\"string\">/archives</span></div><div class=\"line\"><span class=\"attr\">  tags:</span> <span class=\"string\">/tags</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Categories-page\"><a href=\"#Categories-page\" class=\"headerlink\" title=\"Categories page\"></a>Categories page</h3><blockquote>\n<p>Add a categories page contains all categories in your site</p>\n</blockquote>\n<ol>\n<li><p>Create a page named <code>categories</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page <span class=\"string\">\"categories\"</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Edit categories page, set page type to <code>categories</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">All</span> <span class=\"string\">categories</span></div><div class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2017</span><span class=\"bullet\">-04</span><span class=\"bullet\">-24</span> <span class=\"number\">16</span><span class=\"string\">:02:15</span></div><div class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">\"categories\"</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>Add categories to theme <code>_config.yml</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">menu:</span></div><div class=\"line\"><span class=\"attr\">  home:</span> <span class=\"string\">/</span></div><div class=\"line\"><span class=\"attr\">  archives:</span> <span class=\"string\">/archives</span></div><div class=\"line\"><span class=\"attr\">  categories:</span> <span class=\"string\">/categories</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"Social-Media\"><a href=\"#Social-Media\" class=\"headerlink\" title=\"Social Media\"></a>Social Media</h3><blockquote>\n<p>NexT can automatically add links to your Social Media accounts:</p>\n</blockquote>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">social:</span></div><div class=\"line\"><span class=\"attr\">  GitHub:</span> <span class=\"string\">your-github-url</span></div><div class=\"line\"><span class=\"attr\">  Twitter:</span> <span class=\"string\">your-twitter-url</span></div><div class=\"line\"><span class=\"attr\">  Weibo:</span> <span class=\"string\">your-weibo-url</span></div><div class=\"line\"><span class=\"attr\">  DouBan:</span> <span class=\"string\">your-douban-url</span></div><div class=\"line\"><span class=\"attr\">  ZhiHu:</span> <span class=\"string\">your-zhihu-url</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://github.com/iissnan/hexo-theme-next\">NexT</a></p>"},{"title":"iOS蓝牙开发(三)","date":"2017-04-25T07:18:35.000Z","_content":"app作为外设被连接的实现 <!--more-->\n\n## 外设模式流程\n```yml\n创建外设管理者实例\n开启本地设备的服务和特征\n发布你的服务和特征到你的设备本地数据库\n广播你的服务\n响应其他中心设备的读写请求\n发送最新的特征值去订阅中心设备\n```\n## 实现步骤\n\n### 创建外设管理者\n```objc\n/*\n 和CBCentralManager类似，蓝牙设备打开需要一定时间，打开成功后会进入委托方法\n - (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral;\n 模拟器永远也不会得CBPeripheralManagerStatePoweredOn状态\n*/\nperipheralManager = [[CBPeripheralManager alloc]initWithDelegate:self queue:nil];\n\n```\n### 创建本地设备的服务和特征\n> 在委托方法` - (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral`中，当peripheral成功打开后，才可以配置`service`和`characteristics`。这里创建的service和chara对象是`CBMutableCharacteristic`和`CBMutableService`。他们的区别就像`NSArray`和`NSMutableArray`区别类似。 我们先创建characteristics和description，description是characteristics的描述，描述分很多种， 这里不细说了，常用的就是`CBUUIDCharacteristicUserDescriptionString`。\n\n```objc\n//peripheralManager状态改变\n- (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral{\n    switch (peripheral.state) {\n            //在这里判断蓝牙设别的状态  当开启了则可调用  setUp方法(自定义)\n        case CBPeripheralManagerStatePoweredOn:\n            NSLog(@\"powered on\");\n            [info setText:[NSString stringWithFormat:@\"设备名%@已经打开，可以使用center进行连接\",LocalNameKey]];\n            [self setUp];\n            break;\n        case CBPeripheralManagerStatePoweredOff:\n            NSLog(@\"powered off\");\n            [info setText:@\"powered off\"];\n            break;\n            \n        default:\n            break;\n    }\n}\n\n//配置bluetooch的\n-(void)setUp{\n    \n    //characteristics字段描述\n    CBUUID *CBUUIDCharacteristicUserDescriptionStringUUID = [CBUUID UUIDWithString:CBUUIDCharacteristicUserDescriptionString];\n    \n    /*\n     可以通知的Characteristic\n     properties：CBCharacteristicPropertyNotify\n     permissions CBAttributePermissionsReadable\n     */\n    CBMutableCharacteristic *notiyCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:notiyCharacteristicUUID]\n                                                                                     properties:CBCharacteristicPropertyNotify \n                                                                                          value:nil \n                                                                                    permissions:CBAttributePermissionsReadable];\n    \n    /*\n     可读写的characteristics\n     properties：CBCharacteristicPropertyWrite | CBCharacteristicPropertyRead\n     permissions CBAttributePermissionsReadable | CBAttributePermissionsWriteable\n     */\n    CBMutableCharacteristic *readwriteCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:readwriteCharacteristicUUID]\n                                                                                         properties:CBCharacteristicPropertyWrite | CBCharacteristicPropertyRead \n                                                                                              value:nil \n                                                                                        permissions:CBAttributePermissionsReadable | CBAttributePermissionsWriteable];\n    //设置description\n    CBMutableDescriptor *readwriteCharacteristicDescription1 = [[CBMutableDescriptor alloc]initWithType: CBUUIDCharacteristicUserDescriptionStringUUID value:@\"name\"];\n    [readwriteCharacteristic setDescriptors:@[readwriteCharacteristicDescription1]];\n    \n    \n    /*\n     只读的Characteristic\n     properties：CBCharacteristicPropertyRead\n     permissions CBAttributePermissionsReadable\n     */\n    CBMutableCharacteristic *readCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:readCharacteristicUUID]\n                                                                                    properties:CBCharacteristicPropertyRead \n                                                                                         value:nil \n                                                                                   permissions:CBAttributePermissionsReadable];\n    \n    \n    //service1初始化并加入两个characteristics\n    CBMutableService *service1 = [[CBMutableService alloc]initWithType:[CBUUID UUIDWithString:ServiceUUID1] primary:YES];\n    [service1 setCharacteristics:@[notiyCharacteristic,readwriteCharacteristic]];\n    \n    //service2初始化并加入一个characteristics\n    CBMutableService *service2 = [[CBMutableService alloc]initWithType:[CBUUID UUIDWithString:ServiceUUID2] primary:YES];\n    [service2 setCharacteristics:@[readCharacteristic]];\n    \n    //添加后就会调用代理的- (void)peripheralManager:(CBPeripheralManager *)peripheral didAddService:(CBService *)service error:(NSError *)error\n    [peripheralManager addService:service1];\n    [peripheralManager addService:service2];\n}\n\n```\n\n### 开启广播\n```objc\n//perihpheral添加了service\n- (void)peripheralManager:(CBPeripheralManager *)peripheral didAddService:(CBService *)service error:(NSError *)error{\n    if (error == nil) {\n        serviceNum++;\n    }\n    \n    //因为我们添加了2个服务，所以想两次都添加完成后才去发送广播\n    if (serviceNum==2) {\n        //添加服务后可以在此向外界发出通告 调用完这个方法后会调用代理的\n        //(void)peripheralManagerDidStartAdvertising:(CBPeripheralManager *)peripheral error:(NSError *)error\n        [peripheralManager startAdvertising:@{\n                                              CBAdvertisementDataServiceUUIDsKey : @[[CBUUID UUIDWithString:ServiceUUID1],[CBUUID UUIDWithString:ServiceUUID2]],\n                                              CBAdvertisementDataLocalNameKey : LocalNameKey\n                                              }\n         ];\n        \n    }\n    \n}\n\n//peripheral开始发送advertising\n- (void)peripheralManagerDidStartAdvertising:(CBPeripheralManager *)peripheral error:(NSError *)error{\n    NSLog(@\"in peripheralManagerDidStartAdvertisiong\");\n}\n```\n\n### 对中心设备请求的响应\n> 读characteristics请求\n写characteristics请求\n订阅和取消订阅characteristics\n\n```objc\n//订阅characteristics\n-(void)peripheralManager:(CBPeripheralManager *)peripheral central:(CBCentral *)central didSubscribeToCharacteristic:(CBCharacteristic *)characteristic{\n    NSLog(@\"订阅了 %@的数据\",characteristic.UUID);\n    //每秒执行一次给主设备发送一个当前时间的秒数\n    timer = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(sendData:) userInfo:characteristic  repeats:YES];\n}\n\n//取消订阅characteristics\n-(void)peripheralManager:(CBPeripheralManager *)peripheral central:(CBCentral *)central didUnsubscribeFromCharacteristic:(CBCharacteristic *)characteristic{\n    NSLog(@\"取消订阅 %@的数据\",characteristic.UUID);\n    //取消回应\n    [timer invalidate];\n}\n\n//发送数据，发送当前时间的秒数\n-(BOOL)sendData:(NSTimer *)t {\n    CBMutableCharacteristic *characteristic = t.userInfo;\n    NSDateFormatter *dft = [[NSDateFormatter alloc]init];\n    [dft setDateFormat:@\"ss\"];\n    NSLog(@\"%@\",[dft stringFromDate:[NSDate date]]);\n    \n    //执行回应Central通知数据\n    return  [peripheralManager updateValue:[[dft stringFromDate:[NSDate date]] dataUsingEncoding:NSUTF8StringEncoding] \n                         forCharacteristic:(CBMutableCharacteristic *)characteristic \n                      onSubscribedCentrals:nil];\n    \n}\n\n\n//读characteristics请求\n- (void)peripheralManager:(CBPeripheralManager *)peripheral didReceiveReadRequest:(CBATTRequest *)request{\n    NSLog(@\"didReceiveReadRequest\");\n    //判断是否有读数据的权限\n    if (request.characteristic.properties & CBCharacteristicPropertyRead) {\n        NSData *data = request.characteristic.value;\n        [request setValue:data];\n        //对请求作出成功响应\n        [peripheralManager respondToRequest:request withResult:CBATTErrorSuccess];\n    }else{\n        [peripheralManager respondToRequest:request withResult:CBATTErrorWriteNotPermitted];\n    }\n}\n\n\n//写characteristics请求\n- (void)peripheralManager:(CBPeripheralManager *)peripheral didReceiveWriteRequests:(NSArray *)requests{\n    NSLog(@\"didReceiveWriteRequests\");\n    CBATTRequest *request = requests[0];\n    \n    //判断是否有写数据的权限\n    if (request.characteristic.properties & CBCharacteristicPropertyWrite) {\n        //需要转换成CBMutableCharacteristic对象才能进行写值\n        CBMutableCharacteristic *c =(CBMutableCharacteristic *)request.characteristic;\n        c.value = request.value;\n        [peripheralManager respondToRequest:request withResult:CBATTErrorSuccess];\n    }else{\n        [peripheralManager respondToRequest:request withResult:CBATTErrorWriteNotPermitted];\n    }\n    \n    \n}\n\n```\n\n程序运行流程图如下:\n![CBPeripheral-image](/images/CBPeripheral.jpg)\n\n---\n原文地址：\n[Kenshin Cui](http://www.cnblogs.com/kenshincui/p/4220402.html#bluetooth)\n[liuyanwei](http://liuyanwei.jumppo.com/2015/09/07/ios-BLE-3.html)\n第三方框架：\n[BabyBluetooth](https://github.com/coolnameismy/BabyBluetooth)","source":"_posts/iOS蓝牙开发-三.md","raw":"---\ntitle: iOS蓝牙开发(三)\ndate: 2017-04-25 15:18:35\ncategories: \"iOS蓝牙开发\"\n---\napp作为外设被连接的实现 <!--more-->\n\n## 外设模式流程\n```yml\n创建外设管理者实例\n开启本地设备的服务和特征\n发布你的服务和特征到你的设备本地数据库\n广播你的服务\n响应其他中心设备的读写请求\n发送最新的特征值去订阅中心设备\n```\n## 实现步骤\n\n### 创建外设管理者\n```objc\n/*\n 和CBCentralManager类似，蓝牙设备打开需要一定时间，打开成功后会进入委托方法\n - (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral;\n 模拟器永远也不会得CBPeripheralManagerStatePoweredOn状态\n*/\nperipheralManager = [[CBPeripheralManager alloc]initWithDelegate:self queue:nil];\n\n```\n### 创建本地设备的服务和特征\n> 在委托方法` - (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral`中，当peripheral成功打开后，才可以配置`service`和`characteristics`。这里创建的service和chara对象是`CBMutableCharacteristic`和`CBMutableService`。他们的区别就像`NSArray`和`NSMutableArray`区别类似。 我们先创建characteristics和description，description是characteristics的描述，描述分很多种， 这里不细说了，常用的就是`CBUUIDCharacteristicUserDescriptionString`。\n\n```objc\n//peripheralManager状态改变\n- (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral{\n    switch (peripheral.state) {\n            //在这里判断蓝牙设别的状态  当开启了则可调用  setUp方法(自定义)\n        case CBPeripheralManagerStatePoweredOn:\n            NSLog(@\"powered on\");\n            [info setText:[NSString stringWithFormat:@\"设备名%@已经打开，可以使用center进行连接\",LocalNameKey]];\n            [self setUp];\n            break;\n        case CBPeripheralManagerStatePoweredOff:\n            NSLog(@\"powered off\");\n            [info setText:@\"powered off\"];\n            break;\n            \n        default:\n            break;\n    }\n}\n\n//配置bluetooch的\n-(void)setUp{\n    \n    //characteristics字段描述\n    CBUUID *CBUUIDCharacteristicUserDescriptionStringUUID = [CBUUID UUIDWithString:CBUUIDCharacteristicUserDescriptionString];\n    \n    /*\n     可以通知的Characteristic\n     properties：CBCharacteristicPropertyNotify\n     permissions CBAttributePermissionsReadable\n     */\n    CBMutableCharacteristic *notiyCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:notiyCharacteristicUUID]\n                                                                                     properties:CBCharacteristicPropertyNotify \n                                                                                          value:nil \n                                                                                    permissions:CBAttributePermissionsReadable];\n    \n    /*\n     可读写的characteristics\n     properties：CBCharacteristicPropertyWrite | CBCharacteristicPropertyRead\n     permissions CBAttributePermissionsReadable | CBAttributePermissionsWriteable\n     */\n    CBMutableCharacteristic *readwriteCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:readwriteCharacteristicUUID]\n                                                                                         properties:CBCharacteristicPropertyWrite | CBCharacteristicPropertyRead \n                                                                                              value:nil \n                                                                                        permissions:CBAttributePermissionsReadable | CBAttributePermissionsWriteable];\n    //设置description\n    CBMutableDescriptor *readwriteCharacteristicDescription1 = [[CBMutableDescriptor alloc]initWithType: CBUUIDCharacteristicUserDescriptionStringUUID value:@\"name\"];\n    [readwriteCharacteristic setDescriptors:@[readwriteCharacteristicDescription1]];\n    \n    \n    /*\n     只读的Characteristic\n     properties：CBCharacteristicPropertyRead\n     permissions CBAttributePermissionsReadable\n     */\n    CBMutableCharacteristic *readCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:readCharacteristicUUID]\n                                                                                    properties:CBCharacteristicPropertyRead \n                                                                                         value:nil \n                                                                                   permissions:CBAttributePermissionsReadable];\n    \n    \n    //service1初始化并加入两个characteristics\n    CBMutableService *service1 = [[CBMutableService alloc]initWithType:[CBUUID UUIDWithString:ServiceUUID1] primary:YES];\n    [service1 setCharacteristics:@[notiyCharacteristic,readwriteCharacteristic]];\n    \n    //service2初始化并加入一个characteristics\n    CBMutableService *service2 = [[CBMutableService alloc]initWithType:[CBUUID UUIDWithString:ServiceUUID2] primary:YES];\n    [service2 setCharacteristics:@[readCharacteristic]];\n    \n    //添加后就会调用代理的- (void)peripheralManager:(CBPeripheralManager *)peripheral didAddService:(CBService *)service error:(NSError *)error\n    [peripheralManager addService:service1];\n    [peripheralManager addService:service2];\n}\n\n```\n\n### 开启广播\n```objc\n//perihpheral添加了service\n- (void)peripheralManager:(CBPeripheralManager *)peripheral didAddService:(CBService *)service error:(NSError *)error{\n    if (error == nil) {\n        serviceNum++;\n    }\n    \n    //因为我们添加了2个服务，所以想两次都添加完成后才去发送广播\n    if (serviceNum==2) {\n        //添加服务后可以在此向外界发出通告 调用完这个方法后会调用代理的\n        //(void)peripheralManagerDidStartAdvertising:(CBPeripheralManager *)peripheral error:(NSError *)error\n        [peripheralManager startAdvertising:@{\n                                              CBAdvertisementDataServiceUUIDsKey : @[[CBUUID UUIDWithString:ServiceUUID1],[CBUUID UUIDWithString:ServiceUUID2]],\n                                              CBAdvertisementDataLocalNameKey : LocalNameKey\n                                              }\n         ];\n        \n    }\n    \n}\n\n//peripheral开始发送advertising\n- (void)peripheralManagerDidStartAdvertising:(CBPeripheralManager *)peripheral error:(NSError *)error{\n    NSLog(@\"in peripheralManagerDidStartAdvertisiong\");\n}\n```\n\n### 对中心设备请求的响应\n> 读characteristics请求\n写characteristics请求\n订阅和取消订阅characteristics\n\n```objc\n//订阅characteristics\n-(void)peripheralManager:(CBPeripheralManager *)peripheral central:(CBCentral *)central didSubscribeToCharacteristic:(CBCharacteristic *)characteristic{\n    NSLog(@\"订阅了 %@的数据\",characteristic.UUID);\n    //每秒执行一次给主设备发送一个当前时间的秒数\n    timer = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(sendData:) userInfo:characteristic  repeats:YES];\n}\n\n//取消订阅characteristics\n-(void)peripheralManager:(CBPeripheralManager *)peripheral central:(CBCentral *)central didUnsubscribeFromCharacteristic:(CBCharacteristic *)characteristic{\n    NSLog(@\"取消订阅 %@的数据\",characteristic.UUID);\n    //取消回应\n    [timer invalidate];\n}\n\n//发送数据，发送当前时间的秒数\n-(BOOL)sendData:(NSTimer *)t {\n    CBMutableCharacteristic *characteristic = t.userInfo;\n    NSDateFormatter *dft = [[NSDateFormatter alloc]init];\n    [dft setDateFormat:@\"ss\"];\n    NSLog(@\"%@\",[dft stringFromDate:[NSDate date]]);\n    \n    //执行回应Central通知数据\n    return  [peripheralManager updateValue:[[dft stringFromDate:[NSDate date]] dataUsingEncoding:NSUTF8StringEncoding] \n                         forCharacteristic:(CBMutableCharacteristic *)characteristic \n                      onSubscribedCentrals:nil];\n    \n}\n\n\n//读characteristics请求\n- (void)peripheralManager:(CBPeripheralManager *)peripheral didReceiveReadRequest:(CBATTRequest *)request{\n    NSLog(@\"didReceiveReadRequest\");\n    //判断是否有读数据的权限\n    if (request.characteristic.properties & CBCharacteristicPropertyRead) {\n        NSData *data = request.characteristic.value;\n        [request setValue:data];\n        //对请求作出成功响应\n        [peripheralManager respondToRequest:request withResult:CBATTErrorSuccess];\n    }else{\n        [peripheralManager respondToRequest:request withResult:CBATTErrorWriteNotPermitted];\n    }\n}\n\n\n//写characteristics请求\n- (void)peripheralManager:(CBPeripheralManager *)peripheral didReceiveWriteRequests:(NSArray *)requests{\n    NSLog(@\"didReceiveWriteRequests\");\n    CBATTRequest *request = requests[0];\n    \n    //判断是否有写数据的权限\n    if (request.characteristic.properties & CBCharacteristicPropertyWrite) {\n        //需要转换成CBMutableCharacteristic对象才能进行写值\n        CBMutableCharacteristic *c =(CBMutableCharacteristic *)request.characteristic;\n        c.value = request.value;\n        [peripheralManager respondToRequest:request withResult:CBATTErrorSuccess];\n    }else{\n        [peripheralManager respondToRequest:request withResult:CBATTErrorWriteNotPermitted];\n    }\n    \n    \n}\n\n```\n\n程序运行流程图如下:\n![CBPeripheral-image](/images/CBPeripheral.jpg)\n\n---\n原文地址：\n[Kenshin Cui](http://www.cnblogs.com/kenshincui/p/4220402.html#bluetooth)\n[liuyanwei](http://liuyanwei.jumppo.com/2015/09/07/ios-BLE-3.html)\n第三方框架：\n[BabyBluetooth](https://github.com/coolnameismy/BabyBluetooth)","slug":"iOS蓝牙开发-三","published":1,"updated":"2017-04-26T02:16:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21mos600003ik7arrb5yro1","content":"<p>app作为外设被连接的实现 <a id=\"more\"></a></p>\n<h2 id=\"外设模式流程\"><a href=\"#外设模式流程\" class=\"headerlink\" title=\"外设模式流程\"></a>外设模式流程</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">创建外设管理者实例</span></div><div class=\"line\"><span class=\"string\">开启本地设备的服务和特征</span></div><div class=\"line\"><span class=\"string\">发布你的服务和特征到你的设备本地数据库</span></div><div class=\"line\"><span class=\"string\">广播你的服务</span></div><div class=\"line\"><span class=\"string\">响应其他中心设备的读写请求</span></div><div class=\"line\"><span class=\"string\">发送最新的特征值去订阅中心设备</span></div></pre></td></tr></table></figure>\n<h2 id=\"实现步骤\"><a href=\"#实现步骤\" class=\"headerlink\" title=\"实现步骤\"></a>实现步骤</h2><h3 id=\"创建外设管理者\"><a href=\"#创建外设管理者\" class=\"headerlink\" title=\"创建外设管理者\"></a>创建外设管理者</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"> 和CBCentralManager类似，蓝牙设备打开需要一定时间，打开成功后会进入委托方法</div><div class=\"line\"> - (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral;</div><div class=\"line\"> 模拟器永远也不会得CBPeripheralManagerStatePoweredOn状态</div><div class=\"line\">*/</div><div class=\"line\">peripheralManager = [[CBPeripheralManager alloc]initWithDelegate:<span class=\"keyword\">self</span> queue:<span class=\"literal\">nil</span>];</div></pre></td></tr></table></figure>\n<h3 id=\"创建本地设备的服务和特征\"><a href=\"#创建本地设备的服务和特征\" class=\"headerlink\" title=\"创建本地设备的服务和特征\"></a>创建本地设备的服务和特征</h3><blockquote>\n<p>在委托方法<code>- (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral</code>中，当peripheral成功打开后，才可以配置<code>service</code>和<code>characteristics</code>。这里创建的service和chara对象是<code>CBMutableCharacteristic</code>和<code>CBMutableService</code>。他们的区别就像<code>NSArray</code>和<code>NSMutableArray</code>区别类似。 我们先创建characteristics和description，description是characteristics的描述，描述分很多种， 这里不细说了，常用的就是<code>CBUUIDCharacteristicUserDescriptionString</code>。</p>\n</blockquote>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//peripheralManager状态改变</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (peripheral.state) &#123;</div><div class=\"line\">            <span class=\"comment\">//在这里判断蓝牙设别的状态  当开启了则可调用  setUp方法(自定义)</span></div><div class=\"line\">        <span class=\"keyword\">case</span> CBPeripheralManagerStatePoweredOn:</div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"powered on\"</span>);</div><div class=\"line\">            [info setText:[<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"设备名%@已经打开，可以使用center进行连接\"</span>,LocalNameKey]];</div><div class=\"line\">            [<span class=\"keyword\">self</span> setUp];</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBPeripheralManagerStatePoweredOff:</div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"powered off\"</span>);</div><div class=\"line\">            [info setText:<span class=\"string\">@\"powered off\"</span>];</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">            </div><div class=\"line\">        <span class=\"keyword\">default</span>:</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//配置bluetooch的</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)setUp&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//characteristics字段描述</span></div><div class=\"line\">    CBUUID *CBUUIDCharacteristicUserDescriptionStringUUID = [CBUUID UUIDWithString:CBUUIDCharacteristicUserDescriptionString];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/*</span></div><div class=\"line\">     可以通知的Characteristic</div><div class=\"line\">     properties：CBCharacteristicPropertyNotify</div><div class=\"line\">     permissions CBAttributePermissionsReadable</div><div class=\"line\">     */</div><div class=\"line\">    CBMutableCharacteristic *notiyCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:notiyCharacteristicUUID]</div><div class=\"line\">                                                                                     properties:CBCharacteristicPropertyNotify </div><div class=\"line\">                                                                                          value:<span class=\"literal\">nil</span> </div><div class=\"line\">                                                                                    permissions:CBAttributePermissionsReadable];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/*</span></div><div class=\"line\">     可读写的characteristics</div><div class=\"line\">     properties：CBCharacteristicPropertyWrite | CBCharacteristicPropertyRead</div><div class=\"line\">     permissions CBAttributePermissionsReadable | CBAttributePermissionsWriteable</div><div class=\"line\">     */</div><div class=\"line\">    CBMutableCharacteristic *readwriteCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:readwriteCharacteristicUUID]</div><div class=\"line\">                                                                                         properties:CBCharacteristicPropertyWrite | CBCharacteristicPropertyRead </div><div class=\"line\">                                                                                              value:<span class=\"literal\">nil</span> </div><div class=\"line\">                                                                                        permissions:CBAttributePermissionsReadable | CBAttributePermissionsWriteable];</div><div class=\"line\">    <span class=\"comment\">//设置description</span></div><div class=\"line\">    CBMutableDescriptor *readwriteCharacteristicDescription1 = [[CBMutableDescriptor alloc]initWithType: CBUUIDCharacteristicUserDescriptionStringUUID value:<span class=\"string\">@\"name\"</span>];</div><div class=\"line\">    [readwriteCharacteristic setDescriptors:@[readwriteCharacteristicDescription1]];</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/*</span></div><div class=\"line\">     只读的Characteristic</div><div class=\"line\">     properties：CBCharacteristicPropertyRead</div><div class=\"line\">     permissions CBAttributePermissionsReadable</div><div class=\"line\">     */</div><div class=\"line\">    CBMutableCharacteristic *readCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:readCharacteristicUUID]</div><div class=\"line\">                                                                                    properties:CBCharacteristicPropertyRead </div><div class=\"line\">                                                                                         value:<span class=\"literal\">nil</span> </div><div class=\"line\">                                                                                   permissions:CBAttributePermissionsReadable];</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//service1初始化并加入两个characteristics</span></div><div class=\"line\">    CBMutableService *service1 = [[CBMutableService alloc]initWithType:[CBUUID UUIDWithString:ServiceUUID1] primary:<span class=\"literal\">YES</span>];</div><div class=\"line\">    [service1 setCharacteristics:@[notiyCharacteristic,readwriteCharacteristic]];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//service2初始化并加入一个characteristics</span></div><div class=\"line\">    CBMutableService *service2 = [[CBMutableService alloc]initWithType:[CBUUID UUIDWithString:ServiceUUID2] primary:<span class=\"literal\">YES</span>];</div><div class=\"line\">    [service2 setCharacteristics:@[readCharacteristic]];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//添加后就会调用代理的- (void)peripheralManager:(CBPeripheralManager *)peripheral didAddService:(CBService *)service error:(NSError *)error</span></div><div class=\"line\">    [peripheralManager addService:service1];</div><div class=\"line\">    [peripheralManager addService:service2];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"开启广播\"><a href=\"#开启广播\" class=\"headerlink\" title=\"开启广播\"></a>开启广播</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//perihpheral添加了service</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheralManager:(CBPeripheralManager *)peripheral didAddService:(CBService *)service error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (error == <span class=\"literal\">nil</span>) &#123;</div><div class=\"line\">        serviceNum++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//因为我们添加了2个服务，所以想两次都添加完成后才去发送广播</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (serviceNum==<span class=\"number\">2</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">//添加服务后可以在此向外界发出通告 调用完这个方法后会调用代理的</span></div><div class=\"line\">        <span class=\"comment\">//(void)peripheralManagerDidStartAdvertising:(CBPeripheralManager *)peripheral error:(NSError *)error</span></div><div class=\"line\">        [peripheralManager startAdvertising:@&#123;</div><div class=\"line\">                                              CBAdvertisementDataServiceUUIDsKey : @[[CBUUID UUIDWithString:ServiceUUID1],[CBUUID UUIDWithString:ServiceUUID2]],</div><div class=\"line\">                                              CBAdvertisementDataLocalNameKey : LocalNameKey</div><div class=\"line\">                                              &#125;</div><div class=\"line\">         ];</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//peripheral开始发送advertising</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheralManagerDidStartAdvertising:(CBPeripheralManager *)peripheral error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"in peripheralManagerDidStartAdvertisiong\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"对中心设备请求的响应\"><a href=\"#对中心设备请求的响应\" class=\"headerlink\" title=\"对中心设备请求的响应\"></a>对中心设备请求的响应</h3><blockquote>\n<p>读characteristics请求<br>写characteristics请求<br>订阅和取消订阅characteristics</p>\n</blockquote>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//订阅characteristics</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheralManager:(CBPeripheralManager *)peripheral central:(CBCentral *)central didSubscribeToCharacteristic:(CBCharacteristic *)characteristic&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"订阅了 %@的数据\"</span>,characteristic.UUID);</div><div class=\"line\">    <span class=\"comment\">//每秒执行一次给主设备发送一个当前时间的秒数</span></div><div class=\"line\">    timer = [<span class=\"built_in\">NSTimer</span> scheduledTimerWithTimeInterval:<span class=\"number\">1</span> target:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(sendData:) userInfo:characteristic  repeats:<span class=\"literal\">YES</span>];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//取消订阅characteristics</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheralManager:(CBPeripheralManager *)peripheral central:(CBCentral *)central didUnsubscribeFromCharacteristic:(CBCharacteristic *)characteristic&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"取消订阅 %@的数据\"</span>,characteristic.UUID);</div><div class=\"line\">    <span class=\"comment\">//取消回应</span></div><div class=\"line\">    [timer invalidate];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//发送数据，发送当前时间的秒数</span></div><div class=\"line\">-(<span class=\"built_in\">BOOL</span>)sendData:(<span class=\"built_in\">NSTimer</span> *)t &#123;</div><div class=\"line\">    CBMutableCharacteristic *characteristic = t.userInfo;</div><div class=\"line\">    <span class=\"built_in\">NSDateFormatter</span> *dft = [[<span class=\"built_in\">NSDateFormatter</span> alloc]init];</div><div class=\"line\">    [dft setDateFormat:<span class=\"string\">@\"ss\"</span>];</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,[dft stringFromDate:[<span class=\"built_in\">NSDate</span> date]]);</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//执行回应Central通知数据</span></div><div class=\"line\">    <span class=\"keyword\">return</span>  [peripheralManager updateValue:[[dft stringFromDate:[<span class=\"built_in\">NSDate</span> date]] dataUsingEncoding:<span class=\"built_in\">NSUTF8StringEncoding</span>] </div><div class=\"line\">                         forCharacteristic:(CBMutableCharacteristic *)characteristic </div><div class=\"line\">                      onSubscribedCentrals:<span class=\"literal\">nil</span>];</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读characteristics请求</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheralManager:(CBPeripheralManager *)peripheral didReceiveReadRequest:(CBATTRequest *)request&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"didReceiveReadRequest\"</span>);</div><div class=\"line\">    <span class=\"comment\">//判断是否有读数据的权限</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (request.characteristic.properties &amp; CBCharacteristicPropertyRead) &#123;</div><div class=\"line\">        <span class=\"built_in\">NSData</span> *data = request.characteristic.value;</div><div class=\"line\">        [request setValue:data];</div><div class=\"line\">        <span class=\"comment\">//对请求作出成功响应</span></div><div class=\"line\">        [peripheralManager respondToRequest:request withResult:CBATTErrorSuccess];</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        [peripheralManager respondToRequest:request withResult:CBATTErrorWriteNotPermitted];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//写characteristics请求</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheralManager:(CBPeripheralManager *)peripheral didReceiveWriteRequests:(<span class=\"built_in\">NSArray</span> *)requests&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"didReceiveWriteRequests\"</span>);</div><div class=\"line\">    CBATTRequest *request = requests[<span class=\"number\">0</span>];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//判断是否有写数据的权限</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (request.characteristic.properties &amp; CBCharacteristicPropertyWrite) &#123;</div><div class=\"line\">        <span class=\"comment\">//需要转换成CBMutableCharacteristic对象才能进行写值</span></div><div class=\"line\">        CBMutableCharacteristic *c =(CBMutableCharacteristic *)request.characteristic;</div><div class=\"line\">        c.value = request.value;</div><div class=\"line\">        [peripheralManager respondToRequest:request withResult:CBATTErrorSuccess];</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        [peripheralManager respondToRequest:request withResult:CBATTErrorWriteNotPermitted];</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>程序运行流程图如下:<br><img src=\"/images/CBPeripheral.jpg\" alt=\"CBPeripheral-image\"></p>\n<hr>\n<p>原文地址：<br><a href=\"http://www.cnblogs.com/kenshincui/p/4220402.html#bluetooth\" target=\"_blank\" rel=\"external\">Kenshin Cui</a><br><a href=\"http://liuyanwei.jumppo.com/2015/09/07/ios-BLE-3.html\" target=\"_blank\" rel=\"external\">liuyanwei</a><br>第三方框架：<br><a href=\"https://github.com/coolnameismy/BabyBluetooth\" target=\"_blank\" rel=\"external\">BabyBluetooth</a></p>\n","site":{"data":{}},"excerpt":"<p>app作为外设被连接的实现","more":"</p>\n<h2 id=\"外设模式流程\"><a href=\"#外设模式流程\" class=\"headerlink\" title=\"外设模式流程\"></a>外设模式流程</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">创建外设管理者实例</span></div><div class=\"line\"><span class=\"string\">开启本地设备的服务和特征</span></div><div class=\"line\"><span class=\"string\">发布你的服务和特征到你的设备本地数据库</span></div><div class=\"line\"><span class=\"string\">广播你的服务</span></div><div class=\"line\"><span class=\"string\">响应其他中心设备的读写请求</span></div><div class=\"line\"><span class=\"string\">发送最新的特征值去订阅中心设备</span></div></pre></td></tr></table></figure>\n<h2 id=\"实现步骤\"><a href=\"#实现步骤\" class=\"headerlink\" title=\"实现步骤\"></a>实现步骤</h2><h3 id=\"创建外设管理者\"><a href=\"#创建外设管理者\" class=\"headerlink\" title=\"创建外设管理者\"></a>创建外设管理者</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</div><div class=\"line\"> 和CBCentralManager类似，蓝牙设备打开需要一定时间，打开成功后会进入委托方法</div><div class=\"line\"> - (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral;</div><div class=\"line\"> 模拟器永远也不会得CBPeripheralManagerStatePoweredOn状态</div><div class=\"line\">*/</span></div><div class=\"line\">peripheralManager = [[CBPeripheralManager alloc]initWithDelegate:<span class=\"keyword\">self</span> queue:<span class=\"literal\">nil</span>];</div></pre></td></tr></table></figure>\n<h3 id=\"创建本地设备的服务和特征\"><a href=\"#创建本地设备的服务和特征\" class=\"headerlink\" title=\"创建本地设备的服务和特征\"></a>创建本地设备的服务和特征</h3><blockquote>\n<p>在委托方法<code>- (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral</code>中，当peripheral成功打开后，才可以配置<code>service</code>和<code>characteristics</code>。这里创建的service和chara对象是<code>CBMutableCharacteristic</code>和<code>CBMutableService</code>。他们的区别就像<code>NSArray</code>和<code>NSMutableArray</code>区别类似。 我们先创建characteristics和description，description是characteristics的描述，描述分很多种， 这里不细说了，常用的就是<code>CBUUIDCharacteristicUserDescriptionString</code>。</p>\n</blockquote>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//peripheralManager状态改变</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (peripheral.state) &#123;</div><div class=\"line\">            <span class=\"comment\">//在这里判断蓝牙设别的状态  当开启了则可调用  setUp方法(自定义)</span></div><div class=\"line\">        <span class=\"keyword\">case</span> CBPeripheralManagerStatePoweredOn:</div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"powered on\"</span>);</div><div class=\"line\">            [info setText:[<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"设备名%@已经打开，可以使用center进行连接\"</span>,LocalNameKey]];</div><div class=\"line\">            [<span class=\"keyword\">self</span> setUp];</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBPeripheralManagerStatePoweredOff:</div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"powered off\"</span>);</div><div class=\"line\">            [info setText:<span class=\"string\">@\"powered off\"</span>];</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">            </div><div class=\"line\">        <span class=\"keyword\">default</span>:</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//配置bluetooch的</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)setUp&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//characteristics字段描述</span></div><div class=\"line\">    CBUUID *CBUUIDCharacteristicUserDescriptionStringUUID = [CBUUID UUIDWithString:CBUUIDCharacteristicUserDescriptionString];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/*</div><div class=\"line\">     可以通知的Characteristic</div><div class=\"line\">     properties：CBCharacteristicPropertyNotify</div><div class=\"line\">     permissions CBAttributePermissionsReadable</div><div class=\"line\">     */</span></div><div class=\"line\">    CBMutableCharacteristic *notiyCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:notiyCharacteristicUUID]</div><div class=\"line\">                                                                                     properties:CBCharacteristicPropertyNotify </div><div class=\"line\">                                                                                          value:<span class=\"literal\">nil</span> </div><div class=\"line\">                                                                                    permissions:CBAttributePermissionsReadable];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/*</div><div class=\"line\">     可读写的characteristics</div><div class=\"line\">     properties：CBCharacteristicPropertyWrite | CBCharacteristicPropertyRead</div><div class=\"line\">     permissions CBAttributePermissionsReadable | CBAttributePermissionsWriteable</div><div class=\"line\">     */</span></div><div class=\"line\">    CBMutableCharacteristic *readwriteCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:readwriteCharacteristicUUID]</div><div class=\"line\">                                                                                         properties:CBCharacteristicPropertyWrite | CBCharacteristicPropertyRead </div><div class=\"line\">                                                                                              value:<span class=\"literal\">nil</span> </div><div class=\"line\">                                                                                        permissions:CBAttributePermissionsReadable | CBAttributePermissionsWriteable];</div><div class=\"line\">    <span class=\"comment\">//设置description</span></div><div class=\"line\">    CBMutableDescriptor *readwriteCharacteristicDescription1 = [[CBMutableDescriptor alloc]initWithType: CBUUIDCharacteristicUserDescriptionStringUUID value:<span class=\"string\">@\"name\"</span>];</div><div class=\"line\">    [readwriteCharacteristic setDescriptors:@[readwriteCharacteristicDescription1]];</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/*</div><div class=\"line\">     只读的Characteristic</div><div class=\"line\">     properties：CBCharacteristicPropertyRead</div><div class=\"line\">     permissions CBAttributePermissionsReadable</div><div class=\"line\">     */</span></div><div class=\"line\">    CBMutableCharacteristic *readCharacteristic = [[CBMutableCharacteristic alloc]initWithType:[CBUUID UUIDWithString:readCharacteristicUUID]</div><div class=\"line\">                                                                                    properties:CBCharacteristicPropertyRead </div><div class=\"line\">                                                                                         value:<span class=\"literal\">nil</span> </div><div class=\"line\">                                                                                   permissions:CBAttributePermissionsReadable];</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//service1初始化并加入两个characteristics</span></div><div class=\"line\">    CBMutableService *service1 = [[CBMutableService alloc]initWithType:[CBUUID UUIDWithString:ServiceUUID1] primary:<span class=\"literal\">YES</span>];</div><div class=\"line\">    [service1 setCharacteristics:@[notiyCharacteristic,readwriteCharacteristic]];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//service2初始化并加入一个characteristics</span></div><div class=\"line\">    CBMutableService *service2 = [[CBMutableService alloc]initWithType:[CBUUID UUIDWithString:ServiceUUID2] primary:<span class=\"literal\">YES</span>];</div><div class=\"line\">    [service2 setCharacteristics:@[readCharacteristic]];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//添加后就会调用代理的- (void)peripheralManager:(CBPeripheralManager *)peripheral didAddService:(CBService *)service error:(NSError *)error</span></div><div class=\"line\">    [peripheralManager addService:service1];</div><div class=\"line\">    [peripheralManager addService:service2];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"开启广播\"><a href=\"#开启广播\" class=\"headerlink\" title=\"开启广播\"></a>开启广播</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//perihpheral添加了service</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheralManager:(CBPeripheralManager *)peripheral didAddService:(CBService *)service error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (error == <span class=\"literal\">nil</span>) &#123;</div><div class=\"line\">        serviceNum++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//因为我们添加了2个服务，所以想两次都添加完成后才去发送广播</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (serviceNum==<span class=\"number\">2</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">//添加服务后可以在此向外界发出通告 调用完这个方法后会调用代理的</span></div><div class=\"line\">        <span class=\"comment\">//(void)peripheralManagerDidStartAdvertising:(CBPeripheralManager *)peripheral error:(NSError *)error</span></div><div class=\"line\">        [peripheralManager startAdvertising:@&#123;</div><div class=\"line\">                                              CBAdvertisementDataServiceUUIDsKey : @[[CBUUID UUIDWithString:ServiceUUID1],[CBUUID UUIDWithString:ServiceUUID2]],</div><div class=\"line\">                                              CBAdvertisementDataLocalNameKey : LocalNameKey</div><div class=\"line\">                                              &#125;</div><div class=\"line\">         ];</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//peripheral开始发送advertising</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheralManagerDidStartAdvertising:(CBPeripheralManager *)peripheral error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"in peripheralManagerDidStartAdvertisiong\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"对中心设备请求的响应\"><a href=\"#对中心设备请求的响应\" class=\"headerlink\" title=\"对中心设备请求的响应\"></a>对中心设备请求的响应</h3><blockquote>\n<p>读characteristics请求<br>写characteristics请求<br>订阅和取消订阅characteristics</p>\n</blockquote>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//订阅characteristics</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheralManager:(CBPeripheralManager *)peripheral central:(CBCentral *)central didSubscribeToCharacteristic:(CBCharacteristic *)characteristic&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"订阅了 %@的数据\"</span>,characteristic.UUID);</div><div class=\"line\">    <span class=\"comment\">//每秒执行一次给主设备发送一个当前时间的秒数</span></div><div class=\"line\">    timer = [<span class=\"built_in\">NSTimer</span> scheduledTimerWithTimeInterval:<span class=\"number\">1</span> target:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(sendData:) userInfo:characteristic  repeats:<span class=\"literal\">YES</span>];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//取消订阅characteristics</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheralManager:(CBPeripheralManager *)peripheral central:(CBCentral *)central didUnsubscribeFromCharacteristic:(CBCharacteristic *)characteristic&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"取消订阅 %@的数据\"</span>,characteristic.UUID);</div><div class=\"line\">    <span class=\"comment\">//取消回应</span></div><div class=\"line\">    [timer invalidate];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//发送数据，发送当前时间的秒数</span></div><div class=\"line\">-(<span class=\"built_in\">BOOL</span>)sendData:(<span class=\"built_in\">NSTimer</span> *)t &#123;</div><div class=\"line\">    CBMutableCharacteristic *characteristic = t.userInfo;</div><div class=\"line\">    <span class=\"built_in\">NSDateFormatter</span> *dft = [[<span class=\"built_in\">NSDateFormatter</span> alloc]init];</div><div class=\"line\">    [dft setDateFormat:<span class=\"string\">@\"ss\"</span>];</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,[dft stringFromDate:[<span class=\"built_in\">NSDate</span> date]]);</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//执行回应Central通知数据</span></div><div class=\"line\">    <span class=\"keyword\">return</span>  [peripheralManager updateValue:[[dft stringFromDate:[<span class=\"built_in\">NSDate</span> date]] dataUsingEncoding:<span class=\"built_in\">NSUTF8StringEncoding</span>] </div><div class=\"line\">                         forCharacteristic:(CBMutableCharacteristic *)characteristic </div><div class=\"line\">                      onSubscribedCentrals:<span class=\"literal\">nil</span>];</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读characteristics请求</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheralManager:(CBPeripheralManager *)peripheral didReceiveReadRequest:(CBATTRequest *)request&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"didReceiveReadRequest\"</span>);</div><div class=\"line\">    <span class=\"comment\">//判断是否有读数据的权限</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (request.characteristic.properties &amp; CBCharacteristicPropertyRead) &#123;</div><div class=\"line\">        <span class=\"built_in\">NSData</span> *data = request.characteristic.value;</div><div class=\"line\">        [request setValue:data];</div><div class=\"line\">        <span class=\"comment\">//对请求作出成功响应</span></div><div class=\"line\">        [peripheralManager respondToRequest:request withResult:CBATTErrorSuccess];</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        [peripheralManager respondToRequest:request withResult:CBATTErrorWriteNotPermitted];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//写characteristics请求</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheralManager:(CBPeripheralManager *)peripheral didReceiveWriteRequests:(<span class=\"built_in\">NSArray</span> *)requests&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"didReceiveWriteRequests\"</span>);</div><div class=\"line\">    CBATTRequest *request = requests[<span class=\"number\">0</span>];</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//判断是否有写数据的权限</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (request.characteristic.properties &amp; CBCharacteristicPropertyWrite) &#123;</div><div class=\"line\">        <span class=\"comment\">//需要转换成CBMutableCharacteristic对象才能进行写值</span></div><div class=\"line\">        CBMutableCharacteristic *c =(CBMutableCharacteristic *)request.characteristic;</div><div class=\"line\">        c.value = request.value;</div><div class=\"line\">        [peripheralManager respondToRequest:request withResult:CBATTErrorSuccess];</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        [peripheralManager respondToRequest:request withResult:CBATTErrorWriteNotPermitted];</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>程序运行流程图如下:<br><img src=\"/images/CBPeripheral.jpg\" alt=\"CBPeripheral-image\"></p>\n<hr>\n<p>原文地址：<br><a href=\"http://www.cnblogs.com/kenshincui/p/4220402.html#bluetooth\">Kenshin Cui</a><br><a href=\"http://liuyanwei.jumppo.com/2015/09/07/ios-BLE-3.html\">liuyanwei</a><br>第三方框架：<br><a href=\"https://github.com/coolnameismy/BabyBluetooth\">BabyBluetooth</a></p>"},{"title":"iOS蓝牙开发(二)","date":"2017-04-25T03:19:22.000Z","_content":"iOS蓝牙中心模式连接外设，数据接收及发送。<!--more-->\n\n## 连接外设流程\n```yml\n建立Central Manager实例进行蓝牙管理\n搜索,连接外设\n获取外设的服务,特征\n向外设特征值发送读取和写入请求\n订阅一特征值去监控其变化\n```\n## 实现步骤\n\n### 创建蓝牙管理者\n> CBCentralManager是Core Bluetooth的一个对象，代表一个本地中心设备，在使用蓝牙前，需要创建CBCenterManager实例。\n\n```\ncentralM = [[CBCentralManager alloc] initWithDelegate:self queue:nil options:nil];\n```\n创建蓝牙管理者时,`self`会被设置为接收中心设备所有事件的代理者，参数`queue`设置为nil后，`centralM`会通过主线程来处理事件。控制器需要实现`CBCentralManagerDelegate`、`CBPeripheralDelegate`这两个代理。当创建了一个蓝牙管理者，会回调代理的`centralManagerDidUpdateState:`方法，你必须实现这个代理方法来确定中心设备是否支持BLE以及是否可用。\n```objc\n- (void)centralManagerDidUpdateState:(CBCentralManager *)central {\n    switch (central.state) {\n        case CBManagerStateUnknown: // 蓝牙状态未知 State unknown, update imminent.\n            NSLog(@\">>>CBManagerStateUnknown\");\n            break;\n        case CBManagerStateResetting: // 蓝牙重置 The connection with the system service was momentarily lost, update imminent.\n            NSLog(@\">>>CBManagerStateResetting\");\n            break;\n        case CBManagerStateUnsupported: // 不支持 The platform doesn't support the Bluetooth Low Energy Central/Client role.\n            NSLog(@\">>>CBManagerStateUnsupported\");\n            break;\n        case CBManagerStateUnauthorized: // 未授权 The application is not authorized to use the Bluetooth Low Energy role.\n            NSLog(@\">>>CBManagerStateUnauthorized\");\n            break;\n        case CBManagerStatePoweredOff: // 蓝牙未开启 Bluetooth is currently powered off.\n            NSLog(@\">>>CBManagerStatePoweredOff\");\n            break;\n        default: // 蓝牙开启状态，可使用 Bluetooth is currently powered on and available to use.\n            NSLog(@\">>>CBManagerStatePoweredOn\");\n            // 开始扫描外设\n            // 如果你指定第一个参数为nil,centralM会返回发现的所有设备.\n            // 实际开发中，你需要指定一个`CBUUID`对象数组,数组中每一个对象对应一个唯一的外设的服务\n            [centralM scanForPeripheralsWithServices:nil options:nil];\n            break;\n    }\n}\n```\n### 搜索连接外设\n> 调用了`scanForPeripheralsWithServices:options:`方法来搜索可连接的外围设备后,centralM在每次搜索到一个外围设备都会回调其代理的`centralManager:didDiscoverPeripheral:advertisementData:RSSI:` 方法。任何被搜索到的外围设备都以``CBPeripheral``类的方式返回。像下面的代码，你可以实现这个代理方法来罗列出所有被搜索到的蓝牙设备\n\n```objc\n- (void)centralManager:(CBCentralManager *)central \n didDiscoverPeripheral:(CBPeripheral *)peripheral \n     advertisementData:(NSDictionary<NSString *,id> *)advertisementData \n                  RSSI:(NSNumber *)RSSI {\n  \n    NSLog(@\"%@\",peripheral.name);\n    if (peripheral.name.length > 0) {\n    \t// 找到的设备必须持有它，否则CBCentralManager中也不会保存peripheral，那么CBPeripheralDelegate中的方法也不会被调用！！\n        [peripherals addObject:peripheral]; \n        // [manager stopScan]; // 根据需求可以停止搜索其他外设\n        [centralM connectPeripheral:peripheral options:nil]; // 连接外设\n    }\n}\n\n //连接到Peripherals-成功\n - (void)centralManager:(CBCentralManager *)central didConnectPeripheral:(CBPeripheral *)peripheral{\n     NSLog(@\">>>连接到名称为（%@）的设备-成功\",peripheral.name);\n    // 设置外设代理\n    [peripheral setDelegate:self];\n    // 搜索外设的服务\n    [peripheral discoverServices:nil];\n }\n\n//连接到Peripherals-失败\n-(void)centralManager:(CBCentralManager *)central didFailToConnectPeripheral:(CBPeripheral *)peripheral error:(NSError *)error{\n    NSLog(@\">>>连接到名称为（%@）的设备-失败,原因:%@\",[peripheral name],[error localizedDescription]);\n}\n\n//Peripherals断开连接\n- (void)centralManager:(CBCentralManager *)central didDisconnectPeripheral:(CBPeripheral *)peripheral error:(NSError *)error{\n     NSLog(@\">>>外设连接断开连接 %@: %@\\n\", [peripheral name], [error localizedDescription]);\n}\n```\n\n### 扫描外设中的服务器和特征\n> 设备连接成功后，就可以扫描设备的服务了，同样是通过委托形式，扫描到结果后会进入委托方法。但是这个委托已经不再是主设备的委托`CBCentralManagerDelegate`,而是外设的委托`CBPeripheralDelegate`,这个委托包含了主设备与外设交互的许多回叫方法，包括获取services，获取characteristics，获取characteristics的值，获取characteristics的Descriptor，和Descriptor的值，写数据，读rssi，用通知的方式订阅数据等等。\n\n#### 获取外设的services\n```objc\n//扫描到Services\n-(void)peripheral:(CBPeripheral *)peripheral didDiscoverServices:(NSError *)error{\n    //  NSLog(@\">>>扫描到服务：%@\",peripheral.services);\n    if (error)\n    {\n        NSLog(@\">>>Discovered services for %@ with error: %@\", peripheral.name, [error localizedDescription]);\n        return;\n    }\n\n    for (CBService *service in peripheral.services) {\n        NSLog(@\"%@\",service.UUID);\n        // 扫描每个service的Characteristics，扫描到后会进入方法： \n        // -(void)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(NSError *)error\n        [peripheral discoverCharacteristics:nil forService:service];\n    }\n\n}\n\n```\n#### 获取服务的特征\n```objc\n// 搜索服务的特征\n- (void)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(NSError *)error {\n    if (error)\n    {\n        NSLog(@\"error Discovered characteristics for %@ with error: %@\", service.UUID, [error localizedDescription]);\n        return;\n    }\n    \n    for (CBCharacteristic *characteristic in service.characteristics)\n    {\n        NSLog(@\"service:%@ 的 Characteristic: %@\",service.UUID,characteristic.UUID);\n        \n         // 获取Characteristic的值，当你试图去读一个特征对应的值，外围设备会回调它的代理方法：\n         // -(void)peripheral:(CBPeripheral *)peripheral didUpdateValueForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error\n        [peripheral readValueForCharacteristic:characteristic];\n        \n        \n        // 搜索Characteristic的Descriptors，读到数据会进入方法：\n        // -(void)peripheral:(CBPeripheral *)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error\n        [peripheral discoverDescriptorsForCharacteristic:characteristic];\n    }\n    \n}\n\n// 获取的charateristic的值\n-(void)peripheral:(CBPeripheral *)peripheral didUpdateValueForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error{\n    //打印出characteristic的UUID和值\n    //!注意，value的类型是NSData，具体开发时，会根据外设协议制定的方式去解析数据\n    NSLog(@\"characteristic uuid:%@  value:%@\",characteristic.UUID,characteristic.value);\n    \n}\n\n//搜索到Characteristic的Descriptors\n-(void)peripheral:(CBPeripheral *)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error{\n    \n    //打印出Characteristic和他的Descriptors\n    NSLog(@\"characteristic uuid:%@\",characteristic.UUID);\n    for (CBDescriptor *d in characteristic.descriptors) {\n        NSLog(@\"Descriptor uuid:%@\",d.UUID);\n    }\n    \n}\n\n//获取到Descriptors的值\n-(void)peripheral:(CBPeripheral *)peripheral didUpdateValueForDescriptor:(CBDescriptor *)descriptor error:(NSError *)error{\n    //打印出DescriptorsUUID 和value\n    //这个descriptor都是对于characteristic的描述，一般都是字符串，所以这里我们转换成字符串去解析\n    NSLog(@\"characteristic uuid:%@  value:%@\",[NSString stringWithFormat:@\"%@\",descriptor.UUID],descriptor.value);\n}\n```\n\n### 把数据写到Characteristic中\n```objc\n-(void)writeCharacteristic:(CBPeripheral *)peripheral\n            characteristic:(CBCharacteristic *)characteristic\n                     value:(NSData *)value{\n    \n    //打印出 characteristic 的权限，可以看到有很多种，这是一个NS_OPTIONS，就是可以同时用于好几个值，常见的有read，write，notify，indicate，知知道这几个基本就够用了，前连个是读写权限，后两个都是通知，两种不同的通知方式。\n    /*\n     typedef NS_OPTIONS(NSUInteger, CBCharacteristicProperties) {\n     CBCharacteristicPropertyBroadcast\t\t\t\t\t\t\t\t\t\t\t\t= 0x01,\n     CBCharacteristicPropertyRead\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x02,\n     CBCharacteristicPropertyWriteWithoutResponse\t\t\t\t\t\t\t\t\t= 0x04,\n     CBCharacteristicPropertyWrite\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x08,\n     CBCharacteristicPropertyNotify\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x10,\n     CBCharacteristicPropertyIndicate\t\t\t\t\t\t\t\t\t\t\t\t= 0x20,\n     CBCharacteristicPropertyAuthenticatedSignedWrites\t\t\t\t\t\t\t\t= 0x40,\n     CBCharacteristicPropertyExtendedProperties\t\t\t\t\t\t\t\t\t\t= 0x80,\n     CBCharacteristicPropertyNotifyEncryptionRequired NS_ENUM_AVAILABLE(NA, 6_0)\t\t= 0x100,\n     CBCharacteristicPropertyIndicateEncryptionRequired NS_ENUM_AVAILABLE(NA, 6_0)\t= 0x200\n     };\n     \n     */\n    NSLog(@\"%lu\", (unsigned long)characteristic.properties);\n    \n    \n    //只有 characteristic.properties 有write的权限才可以写\n    if(characteristic.properties & CBCharacteristicPropertyWrite){\n        /*\n         最好一个type参数可以为CBCharacteristicWriteWithResponse或type:CBCharacteristicWriteWithResponse,区别是是否会有反馈\n         */\n        [peripheral writeValue:value forCharacteristic:characteristic type:CBCharacteristicWriteWithResponse];\n    }else{\n        NSLog(@\"该字段不可写！\");\n    }\n    \n    \n}\n\n```\n### 订阅Characteristic的通知\n```objc\n//设置通知\n-(void)notifyCharacteristic:(CBPeripheral *)peripheral\n             characteristic:(CBCharacteristic *)characteristic{\n    //设置通知，数据通知会进入：didUpdateValueForCharacteristic方法\n    [peripheral setNotifyValue:YES forCharacteristic:characteristic];\n    \n}\n\n//取消通知\n-(void)cancelNotifyCharacteristic:(CBPeripheral *)peripheral\n                   characteristic:(CBCharacteristic *)characteristic{\n    \n    [peripheral setNotifyValue:NO forCharacteristic:characteristic];\n}\n\n```\n\n### 停止扫描并断开连接\n```objc\n//停止扫描并断开连接\n-(void)disconnectPeripheral:(CBCentralManager *)centralManager\n                 peripheral:(CBPeripheral *)peripheral{\n    //停止扫描\n    [centralM stopScan];\n    //断开连接\n    [centralM cancelPeripheralConnection:peripheral];\n}\n```\n程序运行流程图如下:\n![CBCentral-image](/images/CBCentral.jpg)\n\n---\n\n参考文章:\n[Kenshin Cui](http://www.cnblogs.com/kenshincui/p/4220402.html#bluetooth)\n[ImJackXu](http://blog.csdn.net/dolacmeng/article/details/46457487)\n[liuyanwei](http://liuyanwei.jumppo.com/2015/08/14/ios-BLE-2.html)\n[Core Bluetooth Programing Guide](https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/AboutCoreBluetooth/Introduction.html#//apple_ref/doc/uid/TP40013257-CH1-SW1)","source":"_posts/iOS蓝牙开发-二.md","raw":"---\ntitle: iOS蓝牙开发(二)\ndate: 2017-04-25 11:19:22\ncategories: iOS蓝牙开发\n---\niOS蓝牙中心模式连接外设，数据接收及发送。<!--more-->\n\n## 连接外设流程\n```yml\n建立Central Manager实例进行蓝牙管理\n搜索,连接外设\n获取外设的服务,特征\n向外设特征值发送读取和写入请求\n订阅一特征值去监控其变化\n```\n## 实现步骤\n\n### 创建蓝牙管理者\n> CBCentralManager是Core Bluetooth的一个对象，代表一个本地中心设备，在使用蓝牙前，需要创建CBCenterManager实例。\n\n```\ncentralM = [[CBCentralManager alloc] initWithDelegate:self queue:nil options:nil];\n```\n创建蓝牙管理者时,`self`会被设置为接收中心设备所有事件的代理者，参数`queue`设置为nil后，`centralM`会通过主线程来处理事件。控制器需要实现`CBCentralManagerDelegate`、`CBPeripheralDelegate`这两个代理。当创建了一个蓝牙管理者，会回调代理的`centralManagerDidUpdateState:`方法，你必须实现这个代理方法来确定中心设备是否支持BLE以及是否可用。\n```objc\n- (void)centralManagerDidUpdateState:(CBCentralManager *)central {\n    switch (central.state) {\n        case CBManagerStateUnknown: // 蓝牙状态未知 State unknown, update imminent.\n            NSLog(@\">>>CBManagerStateUnknown\");\n            break;\n        case CBManagerStateResetting: // 蓝牙重置 The connection with the system service was momentarily lost, update imminent.\n            NSLog(@\">>>CBManagerStateResetting\");\n            break;\n        case CBManagerStateUnsupported: // 不支持 The platform doesn't support the Bluetooth Low Energy Central/Client role.\n            NSLog(@\">>>CBManagerStateUnsupported\");\n            break;\n        case CBManagerStateUnauthorized: // 未授权 The application is not authorized to use the Bluetooth Low Energy role.\n            NSLog(@\">>>CBManagerStateUnauthorized\");\n            break;\n        case CBManagerStatePoweredOff: // 蓝牙未开启 Bluetooth is currently powered off.\n            NSLog(@\">>>CBManagerStatePoweredOff\");\n            break;\n        default: // 蓝牙开启状态，可使用 Bluetooth is currently powered on and available to use.\n            NSLog(@\">>>CBManagerStatePoweredOn\");\n            // 开始扫描外设\n            // 如果你指定第一个参数为nil,centralM会返回发现的所有设备.\n            // 实际开发中，你需要指定一个`CBUUID`对象数组,数组中每一个对象对应一个唯一的外设的服务\n            [centralM scanForPeripheralsWithServices:nil options:nil];\n            break;\n    }\n}\n```\n### 搜索连接外设\n> 调用了`scanForPeripheralsWithServices:options:`方法来搜索可连接的外围设备后,centralM在每次搜索到一个外围设备都会回调其代理的`centralManager:didDiscoverPeripheral:advertisementData:RSSI:` 方法。任何被搜索到的外围设备都以``CBPeripheral``类的方式返回。像下面的代码，你可以实现这个代理方法来罗列出所有被搜索到的蓝牙设备\n\n```objc\n- (void)centralManager:(CBCentralManager *)central \n didDiscoverPeripheral:(CBPeripheral *)peripheral \n     advertisementData:(NSDictionary<NSString *,id> *)advertisementData \n                  RSSI:(NSNumber *)RSSI {\n  \n    NSLog(@\"%@\",peripheral.name);\n    if (peripheral.name.length > 0) {\n    \t// 找到的设备必须持有它，否则CBCentralManager中也不会保存peripheral，那么CBPeripheralDelegate中的方法也不会被调用！！\n        [peripherals addObject:peripheral]; \n        // [manager stopScan]; // 根据需求可以停止搜索其他外设\n        [centralM connectPeripheral:peripheral options:nil]; // 连接外设\n    }\n}\n\n //连接到Peripherals-成功\n - (void)centralManager:(CBCentralManager *)central didConnectPeripheral:(CBPeripheral *)peripheral{\n     NSLog(@\">>>连接到名称为（%@）的设备-成功\",peripheral.name);\n    // 设置外设代理\n    [peripheral setDelegate:self];\n    // 搜索外设的服务\n    [peripheral discoverServices:nil];\n }\n\n//连接到Peripherals-失败\n-(void)centralManager:(CBCentralManager *)central didFailToConnectPeripheral:(CBPeripheral *)peripheral error:(NSError *)error{\n    NSLog(@\">>>连接到名称为（%@）的设备-失败,原因:%@\",[peripheral name],[error localizedDescription]);\n}\n\n//Peripherals断开连接\n- (void)centralManager:(CBCentralManager *)central didDisconnectPeripheral:(CBPeripheral *)peripheral error:(NSError *)error{\n     NSLog(@\">>>外设连接断开连接 %@: %@\\n\", [peripheral name], [error localizedDescription]);\n}\n```\n\n### 扫描外设中的服务器和特征\n> 设备连接成功后，就可以扫描设备的服务了，同样是通过委托形式，扫描到结果后会进入委托方法。但是这个委托已经不再是主设备的委托`CBCentralManagerDelegate`,而是外设的委托`CBPeripheralDelegate`,这个委托包含了主设备与外设交互的许多回叫方法，包括获取services，获取characteristics，获取characteristics的值，获取characteristics的Descriptor，和Descriptor的值，写数据，读rssi，用通知的方式订阅数据等等。\n\n#### 获取外设的services\n```objc\n//扫描到Services\n-(void)peripheral:(CBPeripheral *)peripheral didDiscoverServices:(NSError *)error{\n    //  NSLog(@\">>>扫描到服务：%@\",peripheral.services);\n    if (error)\n    {\n        NSLog(@\">>>Discovered services for %@ with error: %@\", peripheral.name, [error localizedDescription]);\n        return;\n    }\n\n    for (CBService *service in peripheral.services) {\n        NSLog(@\"%@\",service.UUID);\n        // 扫描每个service的Characteristics，扫描到后会进入方法： \n        // -(void)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(NSError *)error\n        [peripheral discoverCharacteristics:nil forService:service];\n    }\n\n}\n\n```\n#### 获取服务的特征\n```objc\n// 搜索服务的特征\n- (void)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(NSError *)error {\n    if (error)\n    {\n        NSLog(@\"error Discovered characteristics for %@ with error: %@\", service.UUID, [error localizedDescription]);\n        return;\n    }\n    \n    for (CBCharacteristic *characteristic in service.characteristics)\n    {\n        NSLog(@\"service:%@ 的 Characteristic: %@\",service.UUID,characteristic.UUID);\n        \n         // 获取Characteristic的值，当你试图去读一个特征对应的值，外围设备会回调它的代理方法：\n         // -(void)peripheral:(CBPeripheral *)peripheral didUpdateValueForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error\n        [peripheral readValueForCharacteristic:characteristic];\n        \n        \n        // 搜索Characteristic的Descriptors，读到数据会进入方法：\n        // -(void)peripheral:(CBPeripheral *)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error\n        [peripheral discoverDescriptorsForCharacteristic:characteristic];\n    }\n    \n}\n\n// 获取的charateristic的值\n-(void)peripheral:(CBPeripheral *)peripheral didUpdateValueForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error{\n    //打印出characteristic的UUID和值\n    //!注意，value的类型是NSData，具体开发时，会根据外设协议制定的方式去解析数据\n    NSLog(@\"characteristic uuid:%@  value:%@\",characteristic.UUID,characteristic.value);\n    \n}\n\n//搜索到Characteristic的Descriptors\n-(void)peripheral:(CBPeripheral *)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error{\n    \n    //打印出Characteristic和他的Descriptors\n    NSLog(@\"characteristic uuid:%@\",characteristic.UUID);\n    for (CBDescriptor *d in characteristic.descriptors) {\n        NSLog(@\"Descriptor uuid:%@\",d.UUID);\n    }\n    \n}\n\n//获取到Descriptors的值\n-(void)peripheral:(CBPeripheral *)peripheral didUpdateValueForDescriptor:(CBDescriptor *)descriptor error:(NSError *)error{\n    //打印出DescriptorsUUID 和value\n    //这个descriptor都是对于characteristic的描述，一般都是字符串，所以这里我们转换成字符串去解析\n    NSLog(@\"characteristic uuid:%@  value:%@\",[NSString stringWithFormat:@\"%@\",descriptor.UUID],descriptor.value);\n}\n```\n\n### 把数据写到Characteristic中\n```objc\n-(void)writeCharacteristic:(CBPeripheral *)peripheral\n            characteristic:(CBCharacteristic *)characteristic\n                     value:(NSData *)value{\n    \n    //打印出 characteristic 的权限，可以看到有很多种，这是一个NS_OPTIONS，就是可以同时用于好几个值，常见的有read，write，notify，indicate，知知道这几个基本就够用了，前连个是读写权限，后两个都是通知，两种不同的通知方式。\n    /*\n     typedef NS_OPTIONS(NSUInteger, CBCharacteristicProperties) {\n     CBCharacteristicPropertyBroadcast\t\t\t\t\t\t\t\t\t\t\t\t= 0x01,\n     CBCharacteristicPropertyRead\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x02,\n     CBCharacteristicPropertyWriteWithoutResponse\t\t\t\t\t\t\t\t\t= 0x04,\n     CBCharacteristicPropertyWrite\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x08,\n     CBCharacteristicPropertyNotify\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x10,\n     CBCharacteristicPropertyIndicate\t\t\t\t\t\t\t\t\t\t\t\t= 0x20,\n     CBCharacteristicPropertyAuthenticatedSignedWrites\t\t\t\t\t\t\t\t= 0x40,\n     CBCharacteristicPropertyExtendedProperties\t\t\t\t\t\t\t\t\t\t= 0x80,\n     CBCharacteristicPropertyNotifyEncryptionRequired NS_ENUM_AVAILABLE(NA, 6_0)\t\t= 0x100,\n     CBCharacteristicPropertyIndicateEncryptionRequired NS_ENUM_AVAILABLE(NA, 6_0)\t= 0x200\n     };\n     \n     */\n    NSLog(@\"%lu\", (unsigned long)characteristic.properties);\n    \n    \n    //只有 characteristic.properties 有write的权限才可以写\n    if(characteristic.properties & CBCharacteristicPropertyWrite){\n        /*\n         最好一个type参数可以为CBCharacteristicWriteWithResponse或type:CBCharacteristicWriteWithResponse,区别是是否会有反馈\n         */\n        [peripheral writeValue:value forCharacteristic:characteristic type:CBCharacteristicWriteWithResponse];\n    }else{\n        NSLog(@\"该字段不可写！\");\n    }\n    \n    \n}\n\n```\n### 订阅Characteristic的通知\n```objc\n//设置通知\n-(void)notifyCharacteristic:(CBPeripheral *)peripheral\n             characteristic:(CBCharacteristic *)characteristic{\n    //设置通知，数据通知会进入：didUpdateValueForCharacteristic方法\n    [peripheral setNotifyValue:YES forCharacteristic:characteristic];\n    \n}\n\n//取消通知\n-(void)cancelNotifyCharacteristic:(CBPeripheral *)peripheral\n                   characteristic:(CBCharacteristic *)characteristic{\n    \n    [peripheral setNotifyValue:NO forCharacteristic:characteristic];\n}\n\n```\n\n### 停止扫描并断开连接\n```objc\n//停止扫描并断开连接\n-(void)disconnectPeripheral:(CBCentralManager *)centralManager\n                 peripheral:(CBPeripheral *)peripheral{\n    //停止扫描\n    [centralM stopScan];\n    //断开连接\n    [centralM cancelPeripheralConnection:peripheral];\n}\n```\n程序运行流程图如下:\n![CBCentral-image](/images/CBCentral.jpg)\n\n---\n\n参考文章:\n[Kenshin Cui](http://www.cnblogs.com/kenshincui/p/4220402.html#bluetooth)\n[ImJackXu](http://blog.csdn.net/dolacmeng/article/details/46457487)\n[liuyanwei](http://liuyanwei.jumppo.com/2015/08/14/ios-BLE-2.html)\n[Core Bluetooth Programing Guide](https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/AboutCoreBluetooth/Introduction.html#//apple_ref/doc/uid/TP40013257-CH1-SW1)","slug":"iOS蓝牙开发-二","published":1,"updated":"2017-04-26T02:21:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21mos650005ik7abs4npdft","content":"<p>iOS蓝牙中心模式连接外设，数据接收及发送。<a id=\"more\"></a></p>\n<h2 id=\"连接外设流程\"><a href=\"#连接外设流程\" class=\"headerlink\" title=\"连接外设流程\"></a>连接外设流程</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">建立Central</span> <span class=\"string\">Manager实例进行蓝牙管理</span></div><div class=\"line\"><span class=\"string\">搜索,连接外设</span></div><div class=\"line\"><span class=\"string\">获取外设的服务,特征</span></div><div class=\"line\"><span class=\"string\">向外设特征值发送读取和写入请求</span></div><div class=\"line\"><span class=\"string\">订阅一特征值去监控其变化</span></div></pre></td></tr></table></figure>\n<h2 id=\"实现步骤\"><a href=\"#实现步骤\" class=\"headerlink\" title=\"实现步骤\"></a>实现步骤</h2><h3 id=\"创建蓝牙管理者\"><a href=\"#创建蓝牙管理者\" class=\"headerlink\" title=\"创建蓝牙管理者\"></a>创建蓝牙管理者</h3><blockquote>\n<p>CBCentralManager是Core Bluetooth的一个对象，代表一个本地中心设备，在使用蓝牙前，需要创建CBCenterManager实例。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">centralM = [[CBCentralManager alloc] initWithDelegate:self queue:nil options:nil];</div></pre></td></tr></table></figure>\n<p>创建蓝牙管理者时,<code>self</code>会被设置为接收中心设备所有事件的代理者，参数<code>queue</code>设置为nil后，<code>centralM</code>会通过主线程来处理事件。控制器需要实现<code>CBCentralManagerDelegate</code>、<code>CBPeripheralDelegate</code>这两个代理。当创建了一个蓝牙管理者，会回调代理的<code>centralManagerDidUpdateState:</code>方法，你必须实现这个代理方法来确定中心设备是否支持BLE以及是否可用。<br><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (<span class=\"keyword\">void</span>)centralManagerDidUpdateState:(CBCentralManager *)central &#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (central.state) &#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBManagerStateUnknown: <span class=\"comment\">// 蓝牙状态未知 State unknown, update imminent.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStateUnknown\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBManagerStateResetting: <span class=\"comment\">// 蓝牙重置 The connection with the system service was momentarily lost, update imminent.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStateResetting\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBManagerStateUnsupported: <span class=\"comment\">// 不支持 The platform doesn't support the Bluetooth Low Energy Central/Client role.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStateUnsupported\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBManagerStateUnauthorized: <span class=\"comment\">// 未授权 The application is not authorized to use the Bluetooth Low Energy role.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStateUnauthorized\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBManagerStatePoweredOff: <span class=\"comment\">// 蓝牙未开启 Bluetooth is currently powered off.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStatePoweredOff\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">default</span>: <span class=\"comment\">// 蓝牙开启状态，可使用 Bluetooth is currently powered on and available to use.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStatePoweredOn\"</span>);</div><div class=\"line\">            <span class=\"comment\">// 开始扫描外设</span></div><div class=\"line\">            <span class=\"comment\">// 如果你指定第一个参数为nil,centralM会返回发现的所有设备.</span></div><div class=\"line\">            <span class=\"comment\">// 实际开发中，你需要指定一个`CBUUID`对象数组,数组中每一个对象对应一个唯一的外设的服务</span></div><div class=\"line\">            [centralM scanForPeripheralsWithServices:<span class=\"literal\">nil</span> options:<span class=\"literal\">nil</span>];</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"搜索连接外设\"><a href=\"#搜索连接外设\" class=\"headerlink\" title=\"搜索连接外设\"></a>搜索连接外设</h3><blockquote>\n<p>调用了<code>scanForPeripheralsWithServices:options:</code>方法来搜索可连接的外围设备后,centralM在每次搜索到一个外围设备都会回调其代理的<code>centralManager:didDiscoverPeripheral:advertisementData:RSSI:</code> 方法。任何被搜索到的外围设备都以<code>CBPeripheral</code>类的方式返回。像下面的代码，你可以实现这个代理方法来罗列出所有被搜索到的蓝牙设备</p>\n</blockquote>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (<span class=\"keyword\">void</span>)centralManager:(CBCentralManager *)central </div><div class=\"line\"> didDiscoverPeripheral:(CBPeripheral *)peripheral </div><div class=\"line\">     advertisementData:(<span class=\"built_in\">NSDictionary</span>&lt;<span class=\"built_in\">NSString</span> *,<span class=\"keyword\">id</span>&gt; *)advertisementData </div><div class=\"line\">                  RSSI:(<span class=\"built_in\">NSNumber</span> *)RSSI &#123;</div><div class=\"line\">  </div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,peripheral.name);</div><div class=\"line\">    <span class=\"keyword\">if</span> (peripheral.name.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">    \t<span class=\"comment\">// 找到的设备必须持有它，否则CBCentralManager中也不会保存peripheral，那么CBPeripheralDelegate中的方法也不会被调用！！</span></div><div class=\"line\">        [peripherals addObject:peripheral]; </div><div class=\"line\">        <span class=\"comment\">// [manager stopScan]; // 根据需求可以停止搜索其他外设</span></div><div class=\"line\">        [centralM connectPeripheral:peripheral options:<span class=\"literal\">nil</span>]; <span class=\"comment\">// 连接外设</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"comment\">//连接到Peripherals-成功</span></div><div class=\"line\"> - (<span class=\"keyword\">void</span>)centralManager:(CBCentralManager *)central didConnectPeripheral:(CBPeripheral *)peripheral&#123;</div><div class=\"line\">     <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;连接到名称为（%@）的设备-成功\"</span>,peripheral.name);</div><div class=\"line\">    <span class=\"comment\">// 设置外设代理</span></div><div class=\"line\">    [peripheral setDelegate:<span class=\"keyword\">self</span>];</div><div class=\"line\">    <span class=\"comment\">// 搜索外设的服务</span></div><div class=\"line\">    [peripheral discoverServices:<span class=\"literal\">nil</span>];</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//连接到Peripherals-失败</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)centralManager:(CBCentralManager *)central didFailToConnectPeripheral:(CBPeripheral *)peripheral error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;连接到名称为（%@）的设备-失败,原因:%@\"</span>,[peripheral name],[error localizedDescription]);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//Peripherals断开连接</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)centralManager:(CBCentralManager *)central didDisconnectPeripheral:(CBPeripheral *)peripheral error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">     <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;外设连接断开连接 %@: %@\\n\"</span>, [peripheral name], [error localizedDescription]);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"扫描外设中的服务器和特征\"><a href=\"#扫描外设中的服务器和特征\" class=\"headerlink\" title=\"扫描外设中的服务器和特征\"></a>扫描外设中的服务器和特征</h3><blockquote>\n<p>设备连接成功后，就可以扫描设备的服务了，同样是通过委托形式，扫描到结果后会进入委托方法。但是这个委托已经不再是主设备的委托<code>CBCentralManagerDelegate</code>,而是外设的委托<code>CBPeripheralDelegate</code>,这个委托包含了主设备与外设交互的许多回叫方法，包括获取services，获取characteristics，获取characteristics的值，获取characteristics的Descriptor，和Descriptor的值，写数据，读rssi，用通知的方式订阅数据等等。</p>\n</blockquote>\n<h4 id=\"获取外设的services\"><a href=\"#获取外设的services\" class=\"headerlink\" title=\"获取外设的services\"></a>获取外设的services</h4><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//扫描到Services</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheral:(CBPeripheral *)peripheral didDiscoverServices:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"comment\">//  NSLog(@\"&gt;&gt;&gt;扫描到服务：%@\",peripheral.services);</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (error)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;Discovered services for %@ with error: %@\"</span>, peripheral.name, [error localizedDescription]);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (CBService *service <span class=\"keyword\">in</span> peripheral.services) &#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,service.UUID);</div><div class=\"line\">        <span class=\"comment\">// 扫描每个service的Characteristics，扫描到后会进入方法： </span></div><div class=\"line\">        <span class=\"comment\">// -(void)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(NSError *)error</span></div><div class=\"line\">        [peripheral discoverCharacteristics:<span class=\"literal\">nil</span> forService:service];</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"获取服务的特征\"><a href=\"#获取服务的特征\" class=\"headerlink\" title=\"获取服务的特征\"></a>获取服务的特征</h4><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 搜索服务的特征</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(<span class=\"built_in\">NSError</span> *)error &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (error)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"error Discovered characteristics for %@ with error: %@\"</span>, service.UUID, [error localizedDescription]);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">for</span> (CBCharacteristic *characteristic <span class=\"keyword\">in</span> service.characteristics)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"service:%@ 的 Characteristic: %@\"</span>,service.UUID,characteristic.UUID);</div><div class=\"line\">        </div><div class=\"line\">         <span class=\"comment\">// 获取Characteristic的值，当你试图去读一个特征对应的值，外围设备会回调它的代理方法：</span></div><div class=\"line\">         <span class=\"comment\">// -(void)peripheral:(CBPeripheral *)peripheral didUpdateValueForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error</span></div><div class=\"line\">        [peripheral readValueForCharacteristic:characteristic];</div><div class=\"line\">        </div><div class=\"line\">        </div><div class=\"line\">        <span class=\"comment\">// 搜索Characteristic的Descriptors，读到数据会进入方法：</span></div><div class=\"line\">        <span class=\"comment\">// -(void)peripheral:(CBPeripheral *)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error</span></div><div class=\"line\">        [peripheral discoverDescriptorsForCharacteristic:characteristic];</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 获取的charateristic的值</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheral:(CBPeripheral *)peripheral didUpdateValueForCharacteristic:(CBCharacteristic *)characteristic error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"comment\">//打印出characteristic的UUID和值</span></div><div class=\"line\">    <span class=\"comment\">//!注意，value的类型是NSData，具体开发时，会根据外设协议制定的方式去解析数据</span></div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"characteristic uuid:%@  value:%@\"</span>,characteristic.UUID,characteristic.value);</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//搜索到Characteristic的Descriptors</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheral:(CBPeripheral *)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)characteristic error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//打印出Characteristic和他的Descriptors</span></div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"characteristic uuid:%@\"</span>,characteristic.UUID);</div><div class=\"line\">    <span class=\"keyword\">for</span> (CBDescriptor *d <span class=\"keyword\">in</span> characteristic.descriptors) &#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"Descriptor uuid:%@\"</span>,d.UUID);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//获取到Descriptors的值</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheral:(CBPeripheral *)peripheral didUpdateValueForDescriptor:(CBDescriptor *)descriptor error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"comment\">//打印出DescriptorsUUID 和value</span></div><div class=\"line\">    <span class=\"comment\">//这个descriptor都是对于characteristic的描述，一般都是字符串，所以这里我们转换成字符串去解析</span></div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"characteristic uuid:%@  value:%@\"</span>,[<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%@\"</span>,descriptor.UUID],descriptor.value);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"把数据写到Characteristic中\"><a href=\"#把数据写到Characteristic中\" class=\"headerlink\" title=\"把数据写到Characteristic中\"></a>把数据写到Characteristic中</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">-(<span class=\"keyword\">void</span>)writeCharacteristic:(CBPeripheral *)peripheral</div><div class=\"line\">            characteristic:(CBCharacteristic *)characteristic</div><div class=\"line\">                     value:(<span class=\"built_in\">NSData</span> *)value&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//打印出 characteristic 的权限，可以看到有很多种，这是一个NS_OPTIONS，就是可以同时用于好几个值，常见的有read，write，notify，indicate，知知道这几个基本就够用了，前连个是读写权限，后两个都是通知，两种不同的通知方式。</span></div><div class=\"line\">    <span class=\"comment\">/*</span></div><div class=\"line\">     typedef NS_OPTIONS(NSUInteger, CBCharacteristicProperties) &#123;</div><div class=\"line\">     CBCharacteristicPropertyBroadcast\t\t\t\t\t\t\t\t\t\t\t\t= 0x01,</div><div class=\"line\">     CBCharacteristicPropertyRead\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x02,</div><div class=\"line\">     CBCharacteristicPropertyWriteWithoutResponse\t\t\t\t\t\t\t\t\t= 0x04,</div><div class=\"line\">     CBCharacteristicPropertyWrite\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x08,</div><div class=\"line\">     CBCharacteristicPropertyNotify\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x10,</div><div class=\"line\">     CBCharacteristicPropertyIndicate\t\t\t\t\t\t\t\t\t\t\t\t= 0x20,</div><div class=\"line\">     CBCharacteristicPropertyAuthenticatedSignedWrites\t\t\t\t\t\t\t\t= 0x40,</div><div class=\"line\">     CBCharacteristicPropertyExtendedProperties\t\t\t\t\t\t\t\t\t\t= 0x80,</div><div class=\"line\">     CBCharacteristicPropertyNotifyEncryptionRequired NS_ENUM_AVAILABLE(NA, 6_0)\t\t= 0x100,</div><div class=\"line\">     CBCharacteristicPropertyIndicateEncryptionRequired NS_ENUM_AVAILABLE(NA, 6_0)\t= 0x200</div><div class=\"line\">     &#125;;</div><div class=\"line\">     </div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%lu\"</span>, (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span>)characteristic.properties);</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//只有 characteristic.properties 有write的权限才可以写</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(characteristic.properties &amp; CBCharacteristicPropertyWrite)&#123;</div><div class=\"line\">        <span class=\"comment\">/*</span></div><div class=\"line\">         最好一个type参数可以为CBCharacteristicWriteWithResponse或type:CBCharacteristicWriteWithResponse,区别是是否会有反馈</div><div class=\"line\">         */</div><div class=\"line\">        [peripheral writeValue:value forCharacteristic:characteristic type:CBCharacteristicWriteWithResponse];</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"该字段不可写！\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"订阅Characteristic的通知\"><a href=\"#订阅Characteristic的通知\" class=\"headerlink\" title=\"订阅Characteristic的通知\"></a>订阅Characteristic的通知</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//设置通知</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)notifyCharacteristic:(CBPeripheral *)peripheral</div><div class=\"line\">             characteristic:(CBCharacteristic *)characteristic&#123;</div><div class=\"line\">    <span class=\"comment\">//设置通知，数据通知会进入：didUpdateValueForCharacteristic方法</span></div><div class=\"line\">    [peripheral setNotifyValue:<span class=\"literal\">YES</span> forCharacteristic:characteristic];</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//取消通知</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)cancelNotifyCharacteristic:(CBPeripheral *)peripheral</div><div class=\"line\">                   characteristic:(CBCharacteristic *)characteristic&#123;</div><div class=\"line\">    </div><div class=\"line\">    [peripheral setNotifyValue:<span class=\"literal\">NO</span> forCharacteristic:characteristic];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"停止扫描并断开连接\"><a href=\"#停止扫描并断开连接\" class=\"headerlink\" title=\"停止扫描并断开连接\"></a>停止扫描并断开连接</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//停止扫描并断开连接</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)disconnectPeripheral:(CBCentralManager *)centralManager</div><div class=\"line\">                 peripheral:(CBPeripheral *)peripheral&#123;</div><div class=\"line\">    <span class=\"comment\">//停止扫描</span></div><div class=\"line\">    [centralM stopScan];</div><div class=\"line\">    <span class=\"comment\">//断开连接</span></div><div class=\"line\">    [centralM cancelPeripheralConnection:peripheral];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>程序运行流程图如下:<br><img src=\"/images/CBCentral.jpg\" alt=\"CBCentral-image\"></p>\n<hr>\n<p>参考文章:<br><a href=\"http://www.cnblogs.com/kenshincui/p/4220402.html#bluetooth\" target=\"_blank\" rel=\"external\">Kenshin Cui</a><br><a href=\"http://blog.csdn.net/dolacmeng/article/details/46457487\" target=\"_blank\" rel=\"external\">ImJackXu</a><br><a href=\"http://liuyanwei.jumppo.com/2015/08/14/ios-BLE-2.html\" target=\"_blank\" rel=\"external\">liuyanwei</a><br><a href=\"https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/AboutCoreBluetooth/Introduction.html#//apple_ref/doc/uid/TP40013257-CH1-SW1\" target=\"_blank\" rel=\"external\">Core Bluetooth Programing Guide</a></p>\n","site":{"data":{}},"excerpt":"<p>iOS蓝牙中心模式连接外设，数据接收及发送。","more":"</p>\n<h2 id=\"连接外设流程\"><a href=\"#连接外设流程\" class=\"headerlink\" title=\"连接外设流程\"></a>连接外设流程</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">建立Central</span> <span class=\"string\">Manager实例进行蓝牙管理</span></div><div class=\"line\"><span class=\"string\">搜索,连接外设</span></div><div class=\"line\"><span class=\"string\">获取外设的服务,特征</span></div><div class=\"line\"><span class=\"string\">向外设特征值发送读取和写入请求</span></div><div class=\"line\"><span class=\"string\">订阅一特征值去监控其变化</span></div></pre></td></tr></table></figure>\n<h2 id=\"实现步骤\"><a href=\"#实现步骤\" class=\"headerlink\" title=\"实现步骤\"></a>实现步骤</h2><h3 id=\"创建蓝牙管理者\"><a href=\"#创建蓝牙管理者\" class=\"headerlink\" title=\"创建蓝牙管理者\"></a>创建蓝牙管理者</h3><blockquote>\n<p>CBCentralManager是Core Bluetooth的一个对象，代表一个本地中心设备，在使用蓝牙前，需要创建CBCenterManager实例。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">centralM = [[CBCentralManager alloc] initWithDelegate:self queue:nil options:nil];</div></pre></td></tr></table></figure>\n<p>创建蓝牙管理者时,<code>self</code>会被设置为接收中心设备所有事件的代理者，参数<code>queue</code>设置为nil后，<code>centralM</code>会通过主线程来处理事件。控制器需要实现<code>CBCentralManagerDelegate</code>、<code>CBPeripheralDelegate</code>这两个代理。当创建了一个蓝牙管理者，会回调代理的<code>centralManagerDidUpdateState:</code>方法，你必须实现这个代理方法来确定中心设备是否支持BLE以及是否可用。<br><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (<span class=\"keyword\">void</span>)centralManagerDidUpdateState:(CBCentralManager *)central &#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (central.state) &#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBManagerStateUnknown: <span class=\"comment\">// 蓝牙状态未知 State unknown, update imminent.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStateUnknown\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBManagerStateResetting: <span class=\"comment\">// 蓝牙重置 The connection with the system service was momentarily lost, update imminent.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStateResetting\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBManagerStateUnsupported: <span class=\"comment\">// 不支持 The platform doesn't support the Bluetooth Low Energy Central/Client role.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStateUnsupported\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBManagerStateUnauthorized: <span class=\"comment\">// 未授权 The application is not authorized to use the Bluetooth Low Energy role.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStateUnauthorized\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> CBManagerStatePoweredOff: <span class=\"comment\">// 蓝牙未开启 Bluetooth is currently powered off.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStatePoweredOff\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">default</span>: <span class=\"comment\">// 蓝牙开启状态，可使用 Bluetooth is currently powered on and available to use.</span></div><div class=\"line\">            <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;CBManagerStatePoweredOn\"</span>);</div><div class=\"line\">            <span class=\"comment\">// 开始扫描外设</span></div><div class=\"line\">            <span class=\"comment\">// 如果你指定第一个参数为nil,centralM会返回发现的所有设备.</span></div><div class=\"line\">            <span class=\"comment\">// 实际开发中，你需要指定一个`CBUUID`对象数组,数组中每一个对象对应一个唯一的外设的服务</span></div><div class=\"line\">            [centralM scanForPeripheralsWithServices:<span class=\"literal\">nil</span> options:<span class=\"literal\">nil</span>];</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"搜索连接外设\"><a href=\"#搜索连接外设\" class=\"headerlink\" title=\"搜索连接外设\"></a>搜索连接外设</h3><blockquote>\n<p>调用了<code>scanForPeripheralsWithServices:options:</code>方法来搜索可连接的外围设备后,centralM在每次搜索到一个外围设备都会回调其代理的<code>centralManager:didDiscoverPeripheral:advertisementData:RSSI:</code> 方法。任何被搜索到的外围设备都以<code>CBPeripheral</code>类的方式返回。像下面的代码，你可以实现这个代理方法来罗列出所有被搜索到的蓝牙设备</p>\n</blockquote>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (<span class=\"keyword\">void</span>)centralManager:(CBCentralManager *)central </div><div class=\"line\"> didDiscoverPeripheral:(CBPeripheral *)peripheral </div><div class=\"line\">     advertisementData:(<span class=\"built_in\">NSDictionary</span>&lt;<span class=\"built_in\">NSString</span> *,<span class=\"keyword\">id</span>&gt; *)advertisementData </div><div class=\"line\">                  RSSI:(<span class=\"built_in\">NSNumber</span> *)RSSI &#123;</div><div class=\"line\">  </div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,peripheral.name);</div><div class=\"line\">    <span class=\"keyword\">if</span> (peripheral.name.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">    \t<span class=\"comment\">// 找到的设备必须持有它，否则CBCentralManager中也不会保存peripheral，那么CBPeripheralDelegate中的方法也不会被调用！！</span></div><div class=\"line\">        [peripherals addObject:peripheral]; </div><div class=\"line\">        <span class=\"comment\">// [manager stopScan]; // 根据需求可以停止搜索其他外设</span></div><div class=\"line\">        [centralM connectPeripheral:peripheral options:<span class=\"literal\">nil</span>]; <span class=\"comment\">// 连接外设</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"comment\">//连接到Peripherals-成功</span></div><div class=\"line\"> - (<span class=\"keyword\">void</span>)centralManager:(CBCentralManager *)central didConnectPeripheral:(CBPeripheral *)peripheral&#123;</div><div class=\"line\">     <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;连接到名称为（%@）的设备-成功\"</span>,peripheral.name);</div><div class=\"line\">    <span class=\"comment\">// 设置外设代理</span></div><div class=\"line\">    [peripheral setDelegate:<span class=\"keyword\">self</span>];</div><div class=\"line\">    <span class=\"comment\">// 搜索外设的服务</span></div><div class=\"line\">    [peripheral discoverServices:<span class=\"literal\">nil</span>];</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//连接到Peripherals-失败</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)centralManager:(CBCentralManager *)central didFailToConnectPeripheral:(CBPeripheral *)peripheral error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;连接到名称为（%@）的设备-失败,原因:%@\"</span>,[peripheral name],[error localizedDescription]);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//Peripherals断开连接</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)centralManager:(CBCentralManager *)central didDisconnectPeripheral:(CBPeripheral *)peripheral error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">     <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;外设连接断开连接 %@: %@\\n\"</span>, [peripheral name], [error localizedDescription]);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"扫描外设中的服务器和特征\"><a href=\"#扫描外设中的服务器和特征\" class=\"headerlink\" title=\"扫描外设中的服务器和特征\"></a>扫描外设中的服务器和特征</h3><blockquote>\n<p>设备连接成功后，就可以扫描设备的服务了，同样是通过委托形式，扫描到结果后会进入委托方法。但是这个委托已经不再是主设备的委托<code>CBCentralManagerDelegate</code>,而是外设的委托<code>CBPeripheralDelegate</code>,这个委托包含了主设备与外设交互的许多回叫方法，包括获取services，获取characteristics，获取characteristics的值，获取characteristics的Descriptor，和Descriptor的值，写数据，读rssi，用通知的方式订阅数据等等。</p>\n</blockquote>\n<h4 id=\"获取外设的services\"><a href=\"#获取外设的services\" class=\"headerlink\" title=\"获取外设的services\"></a>获取外设的services</h4><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//扫描到Services</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheral:(CBPeripheral *)peripheral didDiscoverServices:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"comment\">//  NSLog(@\"&gt;&gt;&gt;扫描到服务：%@\",peripheral.services);</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (error)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"&gt;&gt;&gt;Discovered services for %@ with error: %@\"</span>, peripheral.name, [error localizedDescription]);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (CBService *service <span class=\"keyword\">in</span> peripheral.services) &#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,service.UUID);</div><div class=\"line\">        <span class=\"comment\">// 扫描每个service的Characteristics，扫描到后会进入方法： </span></div><div class=\"line\">        <span class=\"comment\">// -(void)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(NSError *)error</span></div><div class=\"line\">        [peripheral discoverCharacteristics:<span class=\"literal\">nil</span> forService:service];</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"获取服务的特征\"><a href=\"#获取服务的特征\" class=\"headerlink\" title=\"获取服务的特征\"></a>获取服务的特征</h4><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 搜索服务的特征</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(<span class=\"built_in\">NSError</span> *)error &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (error)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"error Discovered characteristics for %@ with error: %@\"</span>, service.UUID, [error localizedDescription]);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">for</span> (CBCharacteristic *characteristic <span class=\"keyword\">in</span> service.characteristics)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"service:%@ 的 Characteristic: %@\"</span>,service.UUID,characteristic.UUID);</div><div class=\"line\">        </div><div class=\"line\">         <span class=\"comment\">// 获取Characteristic的值，当你试图去读一个特征对应的值，外围设备会回调它的代理方法：</span></div><div class=\"line\">         <span class=\"comment\">// -(void)peripheral:(CBPeripheral *)peripheral didUpdateValueForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error</span></div><div class=\"line\">        [peripheral readValueForCharacteristic:characteristic];</div><div class=\"line\">        </div><div class=\"line\">        </div><div class=\"line\">        <span class=\"comment\">// 搜索Characteristic的Descriptors，读到数据会进入方法：</span></div><div class=\"line\">        <span class=\"comment\">// -(void)peripheral:(CBPeripheral *)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)characteristic error:(NSError *)error</span></div><div class=\"line\">        [peripheral discoverDescriptorsForCharacteristic:characteristic];</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 获取的charateristic的值</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheral:(CBPeripheral *)peripheral didUpdateValueForCharacteristic:(CBCharacteristic *)characteristic error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"comment\">//打印出characteristic的UUID和值</span></div><div class=\"line\">    <span class=\"comment\">//!注意，value的类型是NSData，具体开发时，会根据外设协议制定的方式去解析数据</span></div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"characteristic uuid:%@  value:%@\"</span>,characteristic.UUID,characteristic.value);</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//搜索到Characteristic的Descriptors</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheral:(CBPeripheral *)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)characteristic error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//打印出Characteristic和他的Descriptors</span></div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"characteristic uuid:%@\"</span>,characteristic.UUID);</div><div class=\"line\">    <span class=\"keyword\">for</span> (CBDescriptor *d <span class=\"keyword\">in</span> characteristic.descriptors) &#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"Descriptor uuid:%@\"</span>,d.UUID);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//获取到Descriptors的值</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)peripheral:(CBPeripheral *)peripheral didUpdateValueForDescriptor:(CBDescriptor *)descriptor error:(<span class=\"built_in\">NSError</span> *)error&#123;</div><div class=\"line\">    <span class=\"comment\">//打印出DescriptorsUUID 和value</span></div><div class=\"line\">    <span class=\"comment\">//这个descriptor都是对于characteristic的描述，一般都是字符串，所以这里我们转换成字符串去解析</span></div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"characteristic uuid:%@  value:%@\"</span>,[<span class=\"built_in\">NSString</span> stringWithFormat:<span class=\"string\">@\"%@\"</span>,descriptor.UUID],descriptor.value);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"把数据写到Characteristic中\"><a href=\"#把数据写到Characteristic中\" class=\"headerlink\" title=\"把数据写到Characteristic中\"></a>把数据写到Characteristic中</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">-(<span class=\"keyword\">void</span>)writeCharacteristic:(CBPeripheral *)peripheral</div><div class=\"line\">            characteristic:(CBCharacteristic *)characteristic</div><div class=\"line\">                     value:(<span class=\"built_in\">NSData</span> *)value&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//打印出 characteristic 的权限，可以看到有很多种，这是一个NS_OPTIONS，就是可以同时用于好几个值，常见的有read，write，notify，indicate，知知道这几个基本就够用了，前连个是读写权限，后两个都是通知，两种不同的通知方式。</span></div><div class=\"line\">    <span class=\"comment\">/*</div><div class=\"line\">     typedef NS_OPTIONS(NSUInteger, CBCharacteristicProperties) &#123;</div><div class=\"line\">     CBCharacteristicPropertyBroadcast\t\t\t\t\t\t\t\t\t\t\t\t= 0x01,</div><div class=\"line\">     CBCharacteristicPropertyRead\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x02,</div><div class=\"line\">     CBCharacteristicPropertyWriteWithoutResponse\t\t\t\t\t\t\t\t\t= 0x04,</div><div class=\"line\">     CBCharacteristicPropertyWrite\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x08,</div><div class=\"line\">     CBCharacteristicPropertyNotify\t\t\t\t\t\t\t\t\t\t\t\t\t= 0x10,</div><div class=\"line\">     CBCharacteristicPropertyIndicate\t\t\t\t\t\t\t\t\t\t\t\t= 0x20,</div><div class=\"line\">     CBCharacteristicPropertyAuthenticatedSignedWrites\t\t\t\t\t\t\t\t= 0x40,</div><div class=\"line\">     CBCharacteristicPropertyExtendedProperties\t\t\t\t\t\t\t\t\t\t= 0x80,</div><div class=\"line\">     CBCharacteristicPropertyNotifyEncryptionRequired NS_ENUM_AVAILABLE(NA, 6_0)\t\t= 0x100,</div><div class=\"line\">     CBCharacteristicPropertyIndicateEncryptionRequired NS_ENUM_AVAILABLE(NA, 6_0)\t= 0x200</div><div class=\"line\">     &#125;;</div><div class=\"line\">     </div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%lu\"</span>, (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span>)characteristic.properties);</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//只有 characteristic.properties 有write的权限才可以写</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(characteristic.properties &amp; CBCharacteristicPropertyWrite)&#123;</div><div class=\"line\">        <span class=\"comment\">/*</div><div class=\"line\">         最好一个type参数可以为CBCharacteristicWriteWithResponse或type:CBCharacteristicWriteWithResponse,区别是是否会有反馈</div><div class=\"line\">         */</span></div><div class=\"line\">        [peripheral writeValue:value forCharacteristic:characteristic type:CBCharacteristicWriteWithResponse];</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"该字段不可写！\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"订阅Characteristic的通知\"><a href=\"#订阅Characteristic的通知\" class=\"headerlink\" title=\"订阅Characteristic的通知\"></a>订阅Characteristic的通知</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//设置通知</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)notifyCharacteristic:(CBPeripheral *)peripheral</div><div class=\"line\">             characteristic:(CBCharacteristic *)characteristic&#123;</div><div class=\"line\">    <span class=\"comment\">//设置通知，数据通知会进入：didUpdateValueForCharacteristic方法</span></div><div class=\"line\">    [peripheral setNotifyValue:<span class=\"literal\">YES</span> forCharacteristic:characteristic];</div><div class=\"line\">    </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//取消通知</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)cancelNotifyCharacteristic:(CBPeripheral *)peripheral</div><div class=\"line\">                   characteristic:(CBCharacteristic *)characteristic&#123;</div><div class=\"line\">    </div><div class=\"line\">    [peripheral setNotifyValue:<span class=\"literal\">NO</span> forCharacteristic:characteristic];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"停止扫描并断开连接\"><a href=\"#停止扫描并断开连接\" class=\"headerlink\" title=\"停止扫描并断开连接\"></a>停止扫描并断开连接</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//停止扫描并断开连接</span></div><div class=\"line\">-(<span class=\"keyword\">void</span>)disconnectPeripheral:(CBCentralManager *)centralManager</div><div class=\"line\">                 peripheral:(CBPeripheral *)peripheral&#123;</div><div class=\"line\">    <span class=\"comment\">//停止扫描</span></div><div class=\"line\">    [centralM stopScan];</div><div class=\"line\">    <span class=\"comment\">//断开连接</span></div><div class=\"line\">    [centralM cancelPeripheralConnection:peripheral];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>程序运行流程图如下:<br><img src=\"/images/CBCentral.jpg\" alt=\"CBCentral-image\"></p>\n<hr>\n<p>参考文章:<br><a href=\"http://www.cnblogs.com/kenshincui/p/4220402.html#bluetooth\">Kenshin Cui</a><br><a href=\"http://blog.csdn.net/dolacmeng/article/details/46457487\">ImJackXu</a><br><a href=\"http://liuyanwei.jumppo.com/2015/08/14/ios-BLE-2.html\">liuyanwei</a><br><a href=\"https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/AboutCoreBluetooth/Introduction.html#//apple_ref/doc/uid/TP40013257-CH1-SW1\">Core Bluetooth Programing Guide</a></p>"},{"title":"iOS蓝牙开发(一)","date":"2017-04-24T08:26:20.000Z","_content":"蓝牙4.0的低能耗，使得蓝牙的应用越来越广泛，穿戴设备、智能家居等都有所涉及。本文主要介绍蓝牙开发相关基础知识，内容主要来自于[Apple官方开发文档][1]。<!--more-->\n[1]:https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/CoreBluetoothOverview/CoreBluetoothOverview.html#//apple_ref/doc/uid/TP40013257-CH2-SW1\n\n### 中心模式和外设模式\n> CoreBluetooth框架用于蓝牙开发，其核心其实是centeral和peripheral，可理解为中心模式和外设模式。\n\n中心模式，就是以你的设备为中心，连接其他的外围设备；外设模式，是使你的设备被其他中心设备连接。蓝牙应用是基于传统的`客户端-服务器`结构，外围设备有其他设备需要的数据，中心设备使用外围设备提供的数据执行一系列任务。\n![CBDevices-image](/images/CBDevices1.png)\n\n### 中心设备搜索和连接正在广告的外围设备\n外围设备对外广播广告包形式的数据，广告包含了外设的名字，功能服务。另一方面，中心设备可以扫描和监听正在广播广告的外设。\n![AdvertisingAndDiscovery-image](/images/AdvertisingAndDiscovery.png)\n\n### 外围设备的数据结构\n外围设备包含一个或多个服务(services)以及提供了连接信号的强度。一个服务是一些数据的集合，是设备完成一个特定行为的功能。例如，一个心率计的服务是从心率传感器读取数据。服务由特征（characteristics）组成。一个特征提供外围设备服务的更详细信息。例如，心率服务只是说明它包含一个描述心率传感器所在的身体部位的特征和一个传输心率测量数据的特征。\n![CBPeripheralData-image](/images/CBPeripheralData.png)\n\n### 中心设备检测外围设备并与其进行数据交互\n一个中心设备与一个外围设备连接成功后，便可以搜索外围设备提供的所有服务和特征。（广告的数据可能只含有一部分可用服务）。一个中心设备也可以通过读和写服务的特征来与外围设备交互。例如，你的app可以从数码温度调节器请求当前房间的温度，或者可以提供一个值来设置房间温度。\n\n### 中心设备、外围设备和外围设备数据的表现形式\n主要的蓝牙参与者和相关数据对应Core Bluetooth framework中的哪些对象？\n\n- 中心设备\n\t1.本地中心设备和远程外围设备\n\t在中心设备这边，一个本地中心设备用一个CBCentralManager对象来代表，这些对象用来管理发现和连接远程设备（用CBPeripheral对象来代表），包括搜索、发现、连接正在广告的外围设备。如下图，显示本地中心设备和远程外围设备在Core Bluetooth framework的表现形式。\n\t![CBObjects_CentralSide-image](/images/CBObjects_CentralSide.png)\n\t2.远程外围设备数据用CBService 和 CBCharacteristic来表示\n\t当你与外围设备（ CBPeripheral对象）进行数据交互，你需要处理它的服务（services）和特征（characteristics），在Core Bluetooth framework中，外围设备的服务用CBService对象来表示。同样的，外围设备的特征用 CBCharacteristic对象来表示\n\t![TreeOfServicesAndCharacteristics_Remote-image](/images/TreeOfServicesAndCharacteristics_Remote.png)\n\n- 外围设备对应的对象\n> 从OS X10.9 和iOS6开始，Mac和iOS设备可以作为蓝牙4.0的外围设备，为其它设备提供数据，包括其它的Mac、iPhone和iPad设备。当你将你的设备设置为外围设备角色，你需要实现外围设备的一些处理。\n\n\t1.本地外围设备和外部中心设备\n\t在外围设备这一边，本地外围设备用 CBPeripheralManager对象来表示，这些对象用来管理外围设备数据库中的服务和特征，以及给外部的中心设备（CBCentral对象）广播这些服务，外围设备管理对象同时可以回应远程设备的读和写请求，下图显示本地外围设备和远程中心设备在 Core Bluetooth framework的表示\n\t![CBObjects_PeripheralSide-image](/images/CBObjects_PeripheralSide.png)\n\t2.本地外围设备的数据使用CBMutableService 和CBMutableCharacteristic对象来表示\n\t当你设置本地外围设备（ CBPeripheralManager对象）并且进行数据交互，你需要处理它的服务和特征。在Core Bluetooth framework中，本地外围设备的服务用CBMutableService对象来表示。同样的，一个服务的特征用CBMutableCharacteristic对象来表示，图1-7便是本地外围设备的服务和特征的基本结构\n\t![TreeOfServicesAndCharacteristics_Local-image](/images/TreeOfServicesAndCharacteristics_Local.png)","source":"_posts/iOS蓝牙开发-一.md","raw":"---\ntitle: iOS蓝牙开发(一)\ndate: 2017-04-24 16:26:20\ncategories: iOS蓝牙开发\n---\n蓝牙4.0的低能耗，使得蓝牙的应用越来越广泛，穿戴设备、智能家居等都有所涉及。本文主要介绍蓝牙开发相关基础知识，内容主要来自于[Apple官方开发文档][1]。<!--more-->\n[1]:https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/CoreBluetoothOverview/CoreBluetoothOverview.html#//apple_ref/doc/uid/TP40013257-CH2-SW1\n\n### 中心模式和外设模式\n> CoreBluetooth框架用于蓝牙开发，其核心其实是centeral和peripheral，可理解为中心模式和外设模式。\n\n中心模式，就是以你的设备为中心，连接其他的外围设备；外设模式，是使你的设备被其他中心设备连接。蓝牙应用是基于传统的`客户端-服务器`结构，外围设备有其他设备需要的数据，中心设备使用外围设备提供的数据执行一系列任务。\n![CBDevices-image](/images/CBDevices1.png)\n\n### 中心设备搜索和连接正在广告的外围设备\n外围设备对外广播广告包形式的数据，广告包含了外设的名字，功能服务。另一方面，中心设备可以扫描和监听正在广播广告的外设。\n![AdvertisingAndDiscovery-image](/images/AdvertisingAndDiscovery.png)\n\n### 外围设备的数据结构\n外围设备包含一个或多个服务(services)以及提供了连接信号的强度。一个服务是一些数据的集合，是设备完成一个特定行为的功能。例如，一个心率计的服务是从心率传感器读取数据。服务由特征（characteristics）组成。一个特征提供外围设备服务的更详细信息。例如，心率服务只是说明它包含一个描述心率传感器所在的身体部位的特征和一个传输心率测量数据的特征。\n![CBPeripheralData-image](/images/CBPeripheralData.png)\n\n### 中心设备检测外围设备并与其进行数据交互\n一个中心设备与一个外围设备连接成功后，便可以搜索外围设备提供的所有服务和特征。（广告的数据可能只含有一部分可用服务）。一个中心设备也可以通过读和写服务的特征来与外围设备交互。例如，你的app可以从数码温度调节器请求当前房间的温度，或者可以提供一个值来设置房间温度。\n\n### 中心设备、外围设备和外围设备数据的表现形式\n主要的蓝牙参与者和相关数据对应Core Bluetooth framework中的哪些对象？\n\n- 中心设备\n\t1.本地中心设备和远程外围设备\n\t在中心设备这边，一个本地中心设备用一个CBCentralManager对象来代表，这些对象用来管理发现和连接远程设备（用CBPeripheral对象来代表），包括搜索、发现、连接正在广告的外围设备。如下图，显示本地中心设备和远程外围设备在Core Bluetooth framework的表现形式。\n\t![CBObjects_CentralSide-image](/images/CBObjects_CentralSide.png)\n\t2.远程外围设备数据用CBService 和 CBCharacteristic来表示\n\t当你与外围设备（ CBPeripheral对象）进行数据交互，你需要处理它的服务（services）和特征（characteristics），在Core Bluetooth framework中，外围设备的服务用CBService对象来表示。同样的，外围设备的特征用 CBCharacteristic对象来表示\n\t![TreeOfServicesAndCharacteristics_Remote-image](/images/TreeOfServicesAndCharacteristics_Remote.png)\n\n- 外围设备对应的对象\n> 从OS X10.9 和iOS6开始，Mac和iOS设备可以作为蓝牙4.0的外围设备，为其它设备提供数据，包括其它的Mac、iPhone和iPad设备。当你将你的设备设置为外围设备角色，你需要实现外围设备的一些处理。\n\n\t1.本地外围设备和外部中心设备\n\t在外围设备这一边，本地外围设备用 CBPeripheralManager对象来表示，这些对象用来管理外围设备数据库中的服务和特征，以及给外部的中心设备（CBCentral对象）广播这些服务，外围设备管理对象同时可以回应远程设备的读和写请求，下图显示本地外围设备和远程中心设备在 Core Bluetooth framework的表示\n\t![CBObjects_PeripheralSide-image](/images/CBObjects_PeripheralSide.png)\n\t2.本地外围设备的数据使用CBMutableService 和CBMutableCharacteristic对象来表示\n\t当你设置本地外围设备（ CBPeripheralManager对象）并且进行数据交互，你需要处理它的服务和特征。在Core Bluetooth framework中，本地外围设备的服务用CBMutableService对象来表示。同样的，一个服务的特征用CBMutableCharacteristic对象来表示，图1-7便是本地外围设备的服务和特征的基本结构\n\t![TreeOfServicesAndCharacteristics_Local-image](/images/TreeOfServicesAndCharacteristics_Local.png)","slug":"iOS蓝牙开发-一","published":1,"updated":"2017-04-25T02:40:35.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21mos6e0007ik7a5usi7pcj","content":"<p>蓝牙4.0的低能耗，使得蓝牙的应用越来越广泛，穿戴设备、智能家居等都有所涉及。本文主要介绍蓝牙开发相关基础知识，内容主要来自于<a href=\"https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/CoreBluetoothOverview/CoreBluetoothOverview.html#//apple_ref/doc/uid/TP40013257-CH2-SW1\" target=\"_blank\" rel=\"external\">Apple官方开发文档</a>。<a id=\"more\"></a></p>\n<h3 id=\"中心模式和外设模式\"><a href=\"#中心模式和外设模式\" class=\"headerlink\" title=\"中心模式和外设模式\"></a>中心模式和外设模式</h3><blockquote>\n<p>CoreBluetooth框架用于蓝牙开发，其核心其实是centeral和peripheral，可理解为中心模式和外设模式。</p>\n</blockquote>\n<p>中心模式，就是以你的设备为中心，连接其他的外围设备；外设模式，是使你的设备被其他中心设备连接。蓝牙应用是基于传统的<code>客户端-服务器</code>结构，外围设备有其他设备需要的数据，中心设备使用外围设备提供的数据执行一系列任务。<br><img src=\"/images/CBDevices1.png\" alt=\"CBDevices-image\"></p>\n<h3 id=\"中心设备搜索和连接正在广告的外围设备\"><a href=\"#中心设备搜索和连接正在广告的外围设备\" class=\"headerlink\" title=\"中心设备搜索和连接正在广告的外围设备\"></a>中心设备搜索和连接正在广告的外围设备</h3><p>外围设备对外广播广告包形式的数据，广告包含了外设的名字，功能服务。另一方面，中心设备可以扫描和监听正在广播广告的外设。<br><img src=\"/images/AdvertisingAndDiscovery.png\" alt=\"AdvertisingAndDiscovery-image\"></p>\n<h3 id=\"外围设备的数据结构\"><a href=\"#外围设备的数据结构\" class=\"headerlink\" title=\"外围设备的数据结构\"></a>外围设备的数据结构</h3><p>外围设备包含一个或多个服务(services)以及提供了连接信号的强度。一个服务是一些数据的集合，是设备完成一个特定行为的功能。例如，一个心率计的服务是从心率传感器读取数据。服务由特征（characteristics）组成。一个特征提供外围设备服务的更详细信息。例如，心率服务只是说明它包含一个描述心率传感器所在的身体部位的特征和一个传输心率测量数据的特征。<br><img src=\"/images/CBPeripheralData.png\" alt=\"CBPeripheralData-image\"></p>\n<h3 id=\"中心设备检测外围设备并与其进行数据交互\"><a href=\"#中心设备检测外围设备并与其进行数据交互\" class=\"headerlink\" title=\"中心设备检测外围设备并与其进行数据交互\"></a>中心设备检测外围设备并与其进行数据交互</h3><p>一个中心设备与一个外围设备连接成功后，便可以搜索外围设备提供的所有服务和特征。（广告的数据可能只含有一部分可用服务）。一个中心设备也可以通过读和写服务的特征来与外围设备交互。例如，你的app可以从数码温度调节器请求当前房间的温度，或者可以提供一个值来设置房间温度。</p>\n<h3 id=\"中心设备、外围设备和外围设备数据的表现形式\"><a href=\"#中心设备、外围设备和外围设备数据的表现形式\" class=\"headerlink\" title=\"中心设备、外围设备和外围设备数据的表现形式\"></a>中心设备、外围设备和外围设备数据的表现形式</h3><p>主要的蓝牙参与者和相关数据对应Core Bluetooth framework中的哪些对象？</p>\n<ul>\n<li><p>中心设备<br>  1.本地中心设备和远程外围设备<br>  在中心设备这边，一个本地中心设备用一个CBCentralManager对象来代表，这些对象用来管理发现和连接远程设备（用CBPeripheral对象来代表），包括搜索、发现、连接正在广告的外围设备。如下图，显示本地中心设备和远程外围设备在Core Bluetooth framework的表现形式。<br>  <img src=\"/images/CBObjects_CentralSide.png\" alt=\"CBObjects_CentralSide-image\"><br>  2.远程外围设备数据用CBService 和 CBCharacteristic来表示<br>  当你与外围设备（ CBPeripheral对象）进行数据交互，你需要处理它的服务（services）和特征（characteristics），在Core Bluetooth framework中，外围设备的服务用CBService对象来表示。同样的，外围设备的特征用 CBCharacteristic对象来表示<br>  <img src=\"/images/TreeOfServicesAndCharacteristics_Remote.png\" alt=\"TreeOfServicesAndCharacteristics_Remote-image\"></p>\n</li>\n<li><p>外围设备对应的对象</p>\n<blockquote>\n<p>从OS X10.9 和iOS6开始，Mac和iOS设备可以作为蓝牙4.0的外围设备，为其它设备提供数据，包括其它的Mac、iPhone和iPad设备。当你将你的设备设置为外围设备角色，你需要实现外围设备的一些处理。</p>\n</blockquote>\n<p>  1.本地外围设备和外部中心设备<br>  在外围设备这一边，本地外围设备用 CBPeripheralManager对象来表示，这些对象用来管理外围设备数据库中的服务和特征，以及给外部的中心设备（CBCentral对象）广播这些服务，外围设备管理对象同时可以回应远程设备的读和写请求，下图显示本地外围设备和远程中心设备在 Core Bluetooth framework的表示<br>  <img src=\"/images/CBObjects_PeripheralSide.png\" alt=\"CBObjects_PeripheralSide-image\"><br>  2.本地外围设备的数据使用CBMutableService 和CBMutableCharacteristic对象来表示<br>  当你设置本地外围设备（ CBPeripheralManager对象）并且进行数据交互，你需要处理它的服务和特征。在Core Bluetooth framework中，本地外围设备的服务用CBMutableService对象来表示。同样的，一个服务的特征用CBMutableCharacteristic对象来表示，图1-7便是本地外围设备的服务和特征的基本结构<br>  <img src=\"/images/TreeOfServicesAndCharacteristics_Local.png\" alt=\"TreeOfServicesAndCharacteristics_Local-image\"></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>蓝牙4.0的低能耗，使得蓝牙的应用越来越广泛，穿戴设备、智能家居等都有所涉及。本文主要介绍蓝牙开发相关基础知识，内容主要来自于<a href=\"https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/CoreBluetoothOverview/CoreBluetoothOverview.html#//apple_ref/doc/uid/TP40013257-CH2-SW1\">Apple官方开发文档</a>。","more":"</p>\n<h3 id=\"中心模式和外设模式\"><a href=\"#中心模式和外设模式\" class=\"headerlink\" title=\"中心模式和外设模式\"></a>中心模式和外设模式</h3><blockquote>\n<p>CoreBluetooth框架用于蓝牙开发，其核心其实是centeral和peripheral，可理解为中心模式和外设模式。</p>\n</blockquote>\n<p>中心模式，就是以你的设备为中心，连接其他的外围设备；外设模式，是使你的设备被其他中心设备连接。蓝牙应用是基于传统的<code>客户端-服务器</code>结构，外围设备有其他设备需要的数据，中心设备使用外围设备提供的数据执行一系列任务。<br><img src=\"/images/CBDevices1.png\" alt=\"CBDevices-image\"></p>\n<h3 id=\"中心设备搜索和连接正在广告的外围设备\"><a href=\"#中心设备搜索和连接正在广告的外围设备\" class=\"headerlink\" title=\"中心设备搜索和连接正在广告的外围设备\"></a>中心设备搜索和连接正在广告的外围设备</h3><p>外围设备对外广播广告包形式的数据，广告包含了外设的名字，功能服务。另一方面，中心设备可以扫描和监听正在广播广告的外设。<br><img src=\"/images/AdvertisingAndDiscovery.png\" alt=\"AdvertisingAndDiscovery-image\"></p>\n<h3 id=\"外围设备的数据结构\"><a href=\"#外围设备的数据结构\" class=\"headerlink\" title=\"外围设备的数据结构\"></a>外围设备的数据结构</h3><p>外围设备包含一个或多个服务(services)以及提供了连接信号的强度。一个服务是一些数据的集合，是设备完成一个特定行为的功能。例如，一个心率计的服务是从心率传感器读取数据。服务由特征（characteristics）组成。一个特征提供外围设备服务的更详细信息。例如，心率服务只是说明它包含一个描述心率传感器所在的身体部位的特征和一个传输心率测量数据的特征。<br><img src=\"/images/CBPeripheralData.png\" alt=\"CBPeripheralData-image\"></p>\n<h3 id=\"中心设备检测外围设备并与其进行数据交互\"><a href=\"#中心设备检测外围设备并与其进行数据交互\" class=\"headerlink\" title=\"中心设备检测外围设备并与其进行数据交互\"></a>中心设备检测外围设备并与其进行数据交互</h3><p>一个中心设备与一个外围设备连接成功后，便可以搜索外围设备提供的所有服务和特征。（广告的数据可能只含有一部分可用服务）。一个中心设备也可以通过读和写服务的特征来与外围设备交互。例如，你的app可以从数码温度调节器请求当前房间的温度，或者可以提供一个值来设置房间温度。</p>\n<h3 id=\"中心设备、外围设备和外围设备数据的表现形式\"><a href=\"#中心设备、外围设备和外围设备数据的表现形式\" class=\"headerlink\" title=\"中心设备、外围设备和外围设备数据的表现形式\"></a>中心设备、外围设备和外围设备数据的表现形式</h3><p>主要的蓝牙参与者和相关数据对应Core Bluetooth framework中的哪些对象？</p>\n<ul>\n<li><p>中心设备<br>  1.本地中心设备和远程外围设备<br>  在中心设备这边，一个本地中心设备用一个CBCentralManager对象来代表，这些对象用来管理发现和连接远程设备（用CBPeripheral对象来代表），包括搜索、发现、连接正在广告的外围设备。如下图，显示本地中心设备和远程外围设备在Core Bluetooth framework的表现形式。<br>  <img src=\"/images/CBObjects_CentralSide.png\" alt=\"CBObjects_CentralSide-image\"><br>  2.远程外围设备数据用CBService 和 CBCharacteristic来表示<br>  当你与外围设备（ CBPeripheral对象）进行数据交互，你需要处理它的服务（services）和特征（characteristics），在Core Bluetooth framework中，外围设备的服务用CBService对象来表示。同样的，外围设备的特征用 CBCharacteristic对象来表示<br>  <img src=\"/images/TreeOfServicesAndCharacteristics_Remote.png\" alt=\"TreeOfServicesAndCharacteristics_Remote-image\"></p>\n</li>\n<li><p>外围设备对应的对象</p>\n<blockquote>\n<p>从OS X10.9 和iOS6开始，Mac和iOS设备可以作为蓝牙4.0的外围设备，为其它设备提供数据，包括其它的Mac、iPhone和iPad设备。当你将你的设备设置为外围设备角色，你需要实现外围设备的一些处理。</p>\n</blockquote>\n<p>  1.本地外围设备和外部中心设备<br>  在外围设备这一边，本地外围设备用 CBPeripheralManager对象来表示，这些对象用来管理外围设备数据库中的服务和特征，以及给外部的中心设备（CBCentral对象）广播这些服务，外围设备管理对象同时可以回应远程设备的读和写请求，下图显示本地外围设备和远程中心设备在 Core Bluetooth framework的表示<br>  <img src=\"/images/CBObjects_PeripheralSide.png\" alt=\"CBObjects_PeripheralSide-image\"><br>  2.本地外围设备的数据使用CBMutableService 和CBMutableCharacteristic对象来表示<br>  当你设置本地外围设备（ CBPeripheralManager对象）并且进行数据交互，你需要处理它的服务和特征。在Core Bluetooth framework中，本地外围设备的服务用CBMutableService对象来表示。同样的，一个服务的特征用CBMutableCharacteristic对象来表示，图1-7便是本地外围设备的服务和特征的基本结构<br>  <img src=\"/images/TreeOfServicesAndCharacteristics_Local.png\" alt=\"TreeOfServicesAndCharacteristics_Local-image\"></p>\n</li>\n</ul>"},{"title":"iOS动画","date":"2017-04-28T07:56:19.000Z","_content":"本章主要介绍iOS动画的基本使用，是通过一个一个实例来介绍iOS动画的基本使用。<!--more-->\n\n## UIView Animation\n\n```objc\n// 1.添加Label\nUILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(100, 300, 100, 100)];\nlabel.numberOfLines = 0;\nlabel.text = @\"UIViewAnimation\";\nlabel.backgroundColor = [UIColor orangeColor];\nlabel.userInteractionEnabled = true;\n[self.view addSubview:label];\n\n// 2.添加手势\nUITapGestureRecognizer *gesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapAction:)];\n[label addGestureRecognizer:gesture];\n\n// 3.执行动画\n- (void)tapAction:(UIGestureRecognizer *)gesture {\n    CGPoint endPoint = CGPointMake(gesture.view.layer.position.x + 100, gesture.view.layer.position.y);\n\n    [UIView animateWithDuration:1.0 animations:^{\n         gesture.view.layer.position = endPoint;\n    }];\n//        [UIView animateWithDuration:1.0 animations:^{\n//        } completion:^(BOOL finished) {\n//        }];\n\n//        // 延迟动画\n//        [UIView animateWithDuration:1.0 delay:0.5 options:UIViewAnimationOptionCurveEaseInOut animations:^{\n//        } completion:^(BOOL finished) {\n//        }];\n\n}\n```\n\n## CoreAnimation\n\n![coreAnimation-image](/images/coreAnimation.png)\n\n1. CAAnimation：核心动画的基础类，不能直接使用，负责动画运行时间、速度的控制，本身实现了CAMediaTiming协议。\n2. CAPropertyAnimation：属性动画的基类（通过属性进行动画设置，注意是可动画属性），不能直接使用。\n3. CAAnimationGroup：动画组，动画组是一种组合模式设计，可以通过动画组来进行所有动画行为的统一控制，组中所有动画效果可以并发执行。\n4. CATransition：转场动画，主要通过滤镜进行动画效果设置。\n5. CABasicAnimation：基础动画，通过属性修改进行动画参数控制，只有初始状态和结束状态。\n6. CAKeyframeAnimation：关键帧动画，同样是通过属性进行动画参数控制，但是同基础动画不同的是它可以有多个状态控制。\n\n### CABaseAnimation\n```objc\n// 1.添加view\nUIView *redView = [[UIView alloc] initWithFrame:CGRectMake(100, 100, 100, 100)];\nself.redView = redView;\nredView.backgroundColor = [UIColor redColor];\n[self.view addSubview:redView];\n// 2.添加手势\nUITapGestureRecognizer *gesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapAction:)];\n[redView addGestureRecognizer:gesture];\n\n- (void)tapAction:(UIGestureRecognizer *)gesture {\n    CGPoint endPoint = CGPointMake(gesture.view.layer.position.x + 100, gesture.view.layer.position.y);\n    CGPoint startPoint = gesture.view.layer.position;\n    // 创建动画实例\n    CABasicAnimation *baseAnimation = [CABasicAnimation animationWithKeyPath:@\"position\"];\n    // 设置动画代理\n    baseAnimation.delegate = self;\n    // 动画起始位置\n    baseAnimation.fromValue = [NSValue valueWIthCGPoint:startPoint];\n    // 动画结束位置\n    baseAnimation.toValue = [NSValue valueWithCGPoint:endPoint];\n    // 动画执行时长\n    // baseAnimation.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseIn)//加速运动\n    // baseAnimation.timingFunction = CAMediaTimingFunction(controlPoints: 0.5, 0, 0.9, 0.7)//自定义加速的曲线参数\n    baseAnimation.duration = 1.0;\n\n    // 设置动画执行测试 baseAnimation.repeatCount = 1;\n    // 在动画中存储一些必要数据\n    [baseAnimation setValue:[NSValue valueWithCGPoint:endPoint] forKey:@\"redView\"];\n\n    // 避免动画执行后回复位\n    baseAnimation.removedOnCompletion = false;\n    baseAnimation.fillMode = kCAFillModeForwards;\n    // 图层添加动画\n    gesture.view.layer addAnimation:baseAnimation forKey:nil]; \n}\n```","source":"_posts/iOS动画.md","raw":"---\ntitle: iOS动画\ndate: 2017-04-28 15:56:19\ncategories: iOS动画\n---\n本章主要介绍iOS动画的基本使用，是通过一个一个实例来介绍iOS动画的基本使用。<!--more-->\n\n## UIView Animation\n\n```objc\n// 1.添加Label\nUILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(100, 300, 100, 100)];\nlabel.numberOfLines = 0;\nlabel.text = @\"UIViewAnimation\";\nlabel.backgroundColor = [UIColor orangeColor];\nlabel.userInteractionEnabled = true;\n[self.view addSubview:label];\n\n// 2.添加手势\nUITapGestureRecognizer *gesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapAction:)];\n[label addGestureRecognizer:gesture];\n\n// 3.执行动画\n- (void)tapAction:(UIGestureRecognizer *)gesture {\n    CGPoint endPoint = CGPointMake(gesture.view.layer.position.x + 100, gesture.view.layer.position.y);\n\n    [UIView animateWithDuration:1.0 animations:^{\n         gesture.view.layer.position = endPoint;\n    }];\n//        [UIView animateWithDuration:1.0 animations:^{\n//        } completion:^(BOOL finished) {\n//        }];\n\n//        // 延迟动画\n//        [UIView animateWithDuration:1.0 delay:0.5 options:UIViewAnimationOptionCurveEaseInOut animations:^{\n//        } completion:^(BOOL finished) {\n//        }];\n\n}\n```\n\n## CoreAnimation\n\n![coreAnimation-image](/images/coreAnimation.png)\n\n1. CAAnimation：核心动画的基础类，不能直接使用，负责动画运行时间、速度的控制，本身实现了CAMediaTiming协议。\n2. CAPropertyAnimation：属性动画的基类（通过属性进行动画设置，注意是可动画属性），不能直接使用。\n3. CAAnimationGroup：动画组，动画组是一种组合模式设计，可以通过动画组来进行所有动画行为的统一控制，组中所有动画效果可以并发执行。\n4. CATransition：转场动画，主要通过滤镜进行动画效果设置。\n5. CABasicAnimation：基础动画，通过属性修改进行动画参数控制，只有初始状态和结束状态。\n6. CAKeyframeAnimation：关键帧动画，同样是通过属性进行动画参数控制，但是同基础动画不同的是它可以有多个状态控制。\n\n### CABaseAnimation\n```objc\n// 1.添加view\nUIView *redView = [[UIView alloc] initWithFrame:CGRectMake(100, 100, 100, 100)];\nself.redView = redView;\nredView.backgroundColor = [UIColor redColor];\n[self.view addSubview:redView];\n// 2.添加手势\nUITapGestureRecognizer *gesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapAction:)];\n[redView addGestureRecognizer:gesture];\n\n- (void)tapAction:(UIGestureRecognizer *)gesture {\n    CGPoint endPoint = CGPointMake(gesture.view.layer.position.x + 100, gesture.view.layer.position.y);\n    CGPoint startPoint = gesture.view.layer.position;\n    // 创建动画实例\n    CABasicAnimation *baseAnimation = [CABasicAnimation animationWithKeyPath:@\"position\"];\n    // 设置动画代理\n    baseAnimation.delegate = self;\n    // 动画起始位置\n    baseAnimation.fromValue = [NSValue valueWIthCGPoint:startPoint];\n    // 动画结束位置\n    baseAnimation.toValue = [NSValue valueWithCGPoint:endPoint];\n    // 动画执行时长\n    // baseAnimation.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseIn)//加速运动\n    // baseAnimation.timingFunction = CAMediaTimingFunction(controlPoints: 0.5, 0, 0.9, 0.7)//自定义加速的曲线参数\n    baseAnimation.duration = 1.0;\n\n    // 设置动画执行测试 baseAnimation.repeatCount = 1;\n    // 在动画中存储一些必要数据\n    [baseAnimation setValue:[NSValue valueWithCGPoint:endPoint] forKey:@\"redView\"];\n\n    // 避免动画执行后回复位\n    baseAnimation.removedOnCompletion = false;\n    baseAnimation.fillMode = kCAFillModeForwards;\n    // 图层添加动画\n    gesture.view.layer addAnimation:baseAnimation forKey:nil]; \n}\n```","slug":"iOS动画","published":1,"updated":"2017-04-28T09:40:13.000Z","_id":"cj21mos6f0008ik7ayjhjrasx","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本章主要介绍iOS动画的基本使用，是通过一个一个实例来介绍iOS动画的基本使用。<a id=\"more\"></a></p>\n<h2 id=\"UIView-Animation\"><a href=\"#UIView-Animation\" class=\"headerlink\" title=\"UIView Animation\"></a>UIView Animation</h2><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 1.添加Label</span></div><div class=\"line\"><span class=\"built_in\">UILabel</span> *label = [[<span class=\"built_in\">UILabel</span> alloc] initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">100</span>, <span class=\"number\">300</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>)];</div><div class=\"line\">label.numberOfLines = <span class=\"number\">0</span>;</div><div class=\"line\">label.text = <span class=\"string\">@\"UIViewAnimation\"</span>;</div><div class=\"line\">label.backgroundColor = [<span class=\"built_in\">UIColor</span> orangeColor];</div><div class=\"line\">label.userInteractionEnabled = <span class=\"literal\">true</span>;</div><div class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:label];</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 2.添加手势</span></div><div class=\"line\"><span class=\"built_in\">UITapGestureRecognizer</span> *gesture = [[<span class=\"built_in\">UITapGestureRecognizer</span> alloc] initWithTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(tapAction:)];</div><div class=\"line\">[label addGestureRecognizer:gesture];</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 3.执行动画</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)tapAction:(<span class=\"built_in\">UIGestureRecognizer</span> *)gesture &#123;</div><div class=\"line\">    <span class=\"built_in\">CGPoint</span> endPoint = <span class=\"built_in\">CGPointMake</span>(gesture.view.layer.position.x + <span class=\"number\">100</span>, gesture.view.layer.position.y);</div><div class=\"line\"></div><div class=\"line\">    [<span class=\"built_in\">UIView</span> animateWithDuration:<span class=\"number\">1.0</span> animations:^&#123;</div><div class=\"line\">         gesture.view.layer.position = endPoint;</div><div class=\"line\">    &#125;];</div><div class=\"line\"><span class=\"comment\">//        [UIView animateWithDuration:1.0 animations:^&#123;</span></div><div class=\"line\"><span class=\"comment\">//        &#125; completion:^(BOOL finished) &#123;</span></div><div class=\"line\"><span class=\"comment\">//        &#125;];</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//        // 延迟动画</span></div><div class=\"line\"><span class=\"comment\">//        [UIView animateWithDuration:1.0 delay:0.5 options:UIViewAnimationOptionCurveEaseInOut animations:^&#123;</span></div><div class=\"line\"><span class=\"comment\">//        &#125; completion:^(BOOL finished) &#123;</span></div><div class=\"line\"><span class=\"comment\">//        &#125;];</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"CoreAnimation\"><a href=\"#CoreAnimation\" class=\"headerlink\" title=\"CoreAnimation\"></a>CoreAnimation</h2><p><img src=\"/images/coreAnimation.png\" alt=\"coreAnimation-image\"></p>\n<ol>\n<li>CAAnimation：核心动画的基础类，不能直接使用，负责动画运行时间、速度的控制，本身实现了CAMediaTiming协议。</li>\n<li>CAPropertyAnimation：属性动画的基类（通过属性进行动画设置，注意是可动画属性），不能直接使用。</li>\n<li>CAAnimationGroup：动画组，动画组是一种组合模式设计，可以通过动画组来进行所有动画行为的统一控制，组中所有动画效果可以并发执行。</li>\n<li>CATransition：转场动画，主要通过滤镜进行动画效果设置。</li>\n<li>CABasicAnimation：基础动画，通过属性修改进行动画参数控制，只有初始状态和结束状态。</li>\n<li>CAKeyframeAnimation：关键帧动画，同样是通过属性进行动画参数控制，但是同基础动画不同的是它可以有多个状态控制。</li>\n</ol>\n<h3 id=\"CABaseAnimation\"><a href=\"#CABaseAnimation\" class=\"headerlink\" title=\"CABaseAnimation\"></a>CABaseAnimation</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 1.添加view</span></div><div class=\"line\"><span class=\"built_in\">UIView</span> *redView = [[<span class=\"built_in\">UIView</span> alloc] initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>)];</div><div class=\"line\"><span class=\"keyword\">self</span>.redView = redView;</div><div class=\"line\">redView.backgroundColor = [<span class=\"built_in\">UIColor</span> redColor];</div><div class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:redView];</div><div class=\"line\"><span class=\"comment\">// 2.添加手势</span></div><div class=\"line\"><span class=\"built_in\">UITapGestureRecognizer</span> *gesture = [[<span class=\"built_in\">UITapGestureRecognizer</span> alloc] initWithTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(tapAction:)];</div><div class=\"line\">[redView addGestureRecognizer:gesture];</div><div class=\"line\"></div><div class=\"line\">- (<span class=\"keyword\">void</span>)tapAction:(<span class=\"built_in\">UIGestureRecognizer</span> *)gesture &#123;</div><div class=\"line\">    <span class=\"built_in\">CGPoint</span> endPoint = <span class=\"built_in\">CGPointMake</span>(gesture.view.layer.position.x + <span class=\"number\">100</span>, gesture.view.layer.position.y);</div><div class=\"line\">    <span class=\"built_in\">CGPoint</span> startPoint = gesture.view.layer.position;</div><div class=\"line\">    <span class=\"comment\">// 创建动画实例</span></div><div class=\"line\">    <span class=\"built_in\">CABasicAnimation</span> *baseAnimation = [<span class=\"built_in\">CABasicAnimation</span> animationWithKeyPath:<span class=\"string\">@\"position\"</span>];</div><div class=\"line\">    <span class=\"comment\">// 设置动画代理</span></div><div class=\"line\">    baseAnimation.delegate = <span class=\"keyword\">self</span>;</div><div class=\"line\">    <span class=\"comment\">// 动画起始位置</span></div><div class=\"line\">    baseAnimation.fromValue = [<span class=\"built_in\">NSValue</span> valueWIthCGPoint:startPoint];</div><div class=\"line\">    <span class=\"comment\">// 动画结束位置</span></div><div class=\"line\">    baseAnimation.toValue = [<span class=\"built_in\">NSValue</span> valueWithCGPoint:endPoint];</div><div class=\"line\">    <span class=\"comment\">// 动画执行时长</span></div><div class=\"line\">    <span class=\"comment\">// baseAnimation.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseIn)//加速运动</span></div><div class=\"line\">    <span class=\"comment\">// baseAnimation.timingFunction = CAMediaTimingFunction(controlPoints: 0.5, 0, 0.9, 0.7)//自定义加速的曲线参数</span></div><div class=\"line\">    baseAnimation.duration = <span class=\"number\">1.0</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 设置动画执行测试 baseAnimation.repeatCount = 1;</span></div><div class=\"line\">    <span class=\"comment\">// 在动画中存储一些必要数据</span></div><div class=\"line\">    [baseAnimation setValue:[<span class=\"built_in\">NSValue</span> valueWithCGPoint:endPoint] forKey:<span class=\"string\">@\"redView\"</span>];</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 避免动画执行后回复位</span></div><div class=\"line\">    baseAnimation.removedOnCompletion = <span class=\"literal\">false</span>;</div><div class=\"line\">    baseAnimation.fillMode = kCAFillModeForwards;</div><div class=\"line\">    <span class=\"comment\">// 图层添加动画</span></div><div class=\"line\">    gesture.view.layer addAnimation:baseAnimation forKey:<span class=\"literal\">nil</span>]; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>本章主要介绍iOS动画的基本使用，是通过一个一个实例来介绍iOS动画的基本使用。","more":"</p>\n<h2 id=\"UIView-Animation\"><a href=\"#UIView-Animation\" class=\"headerlink\" title=\"UIView Animation\"></a>UIView Animation</h2><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 1.添加Label</span></div><div class=\"line\"><span class=\"built_in\">UILabel</span> *label = [[<span class=\"built_in\">UILabel</span> alloc] initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">100</span>, <span class=\"number\">300</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>)];</div><div class=\"line\">label.numberOfLines = <span class=\"number\">0</span>;</div><div class=\"line\">label.text = <span class=\"string\">@\"UIViewAnimation\"</span>;</div><div class=\"line\">label.backgroundColor = [<span class=\"built_in\">UIColor</span> orangeColor];</div><div class=\"line\">label.userInteractionEnabled = <span class=\"literal\">true</span>;</div><div class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:label];</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 2.添加手势</span></div><div class=\"line\"><span class=\"built_in\">UITapGestureRecognizer</span> *gesture = [[<span class=\"built_in\">UITapGestureRecognizer</span> alloc] initWithTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(tapAction:)];</div><div class=\"line\">[label addGestureRecognizer:gesture];</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 3.执行动画</span></div><div class=\"line\">- (<span class=\"keyword\">void</span>)tapAction:(<span class=\"built_in\">UIGestureRecognizer</span> *)gesture &#123;</div><div class=\"line\">    <span class=\"built_in\">CGPoint</span> endPoint = <span class=\"built_in\">CGPointMake</span>(gesture.view.layer.position.x + <span class=\"number\">100</span>, gesture.view.layer.position.y);</div><div class=\"line\"></div><div class=\"line\">    [<span class=\"built_in\">UIView</span> animateWithDuration:<span class=\"number\">1.0</span> animations:^&#123;</div><div class=\"line\">         gesture.view.layer.position = endPoint;</div><div class=\"line\">    &#125;];</div><div class=\"line\"><span class=\"comment\">//        [UIView animateWithDuration:1.0 animations:^&#123;</span></div><div class=\"line\"><span class=\"comment\">//        &#125; completion:^(BOOL finished) &#123;</span></div><div class=\"line\"><span class=\"comment\">//        &#125;];</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//        // 延迟动画</span></div><div class=\"line\"><span class=\"comment\">//        [UIView animateWithDuration:1.0 delay:0.5 options:UIViewAnimationOptionCurveEaseInOut animations:^&#123;</span></div><div class=\"line\"><span class=\"comment\">//        &#125; completion:^(BOOL finished) &#123;</span></div><div class=\"line\"><span class=\"comment\">//        &#125;];</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"CoreAnimation\"><a href=\"#CoreAnimation\" class=\"headerlink\" title=\"CoreAnimation\"></a>CoreAnimation</h2><p><img src=\"/images/coreAnimation.png\" alt=\"coreAnimation-image\"></p>\n<ol>\n<li>CAAnimation：核心动画的基础类，不能直接使用，负责动画运行时间、速度的控制，本身实现了CAMediaTiming协议。</li>\n<li>CAPropertyAnimation：属性动画的基类（通过属性进行动画设置，注意是可动画属性），不能直接使用。</li>\n<li>CAAnimationGroup：动画组，动画组是一种组合模式设计，可以通过动画组来进行所有动画行为的统一控制，组中所有动画效果可以并发执行。</li>\n<li>CATransition：转场动画，主要通过滤镜进行动画效果设置。</li>\n<li>CABasicAnimation：基础动画，通过属性修改进行动画参数控制，只有初始状态和结束状态。</li>\n<li>CAKeyframeAnimation：关键帧动画，同样是通过属性进行动画参数控制，但是同基础动画不同的是它可以有多个状态控制。</li>\n</ol>\n<h3 id=\"CABaseAnimation\"><a href=\"#CABaseAnimation\" class=\"headerlink\" title=\"CABaseAnimation\"></a>CABaseAnimation</h3><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 1.添加view</span></div><div class=\"line\"><span class=\"built_in\">UIView</span> *redView = [[<span class=\"built_in\">UIView</span> alloc] initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>)];</div><div class=\"line\"><span class=\"keyword\">self</span>.redView = redView;</div><div class=\"line\">redView.backgroundColor = [<span class=\"built_in\">UIColor</span> redColor];</div><div class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:redView];</div><div class=\"line\"><span class=\"comment\">// 2.添加手势</span></div><div class=\"line\"><span class=\"built_in\">UITapGestureRecognizer</span> *gesture = [[<span class=\"built_in\">UITapGestureRecognizer</span> alloc] initWithTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(tapAction:)];</div><div class=\"line\">[redView addGestureRecognizer:gesture];</div><div class=\"line\"></div><div class=\"line\">- (<span class=\"keyword\">void</span>)tapAction:(<span class=\"built_in\">UIGestureRecognizer</span> *)gesture &#123;</div><div class=\"line\">    <span class=\"built_in\">CGPoint</span> endPoint = <span class=\"built_in\">CGPointMake</span>(gesture.view.layer.position.x + <span class=\"number\">100</span>, gesture.view.layer.position.y);</div><div class=\"line\">    <span class=\"built_in\">CGPoint</span> startPoint = gesture.view.layer.position;</div><div class=\"line\">    <span class=\"comment\">// 创建动画实例</span></div><div class=\"line\">    <span class=\"built_in\">CABasicAnimation</span> *baseAnimation = [<span class=\"built_in\">CABasicAnimation</span> animationWithKeyPath:<span class=\"string\">@\"position\"</span>];</div><div class=\"line\">    <span class=\"comment\">// 设置动画代理</span></div><div class=\"line\">    baseAnimation.delegate = <span class=\"keyword\">self</span>;</div><div class=\"line\">    <span class=\"comment\">// 动画起始位置</span></div><div class=\"line\">    baseAnimation.fromValue = [<span class=\"built_in\">NSValue</span> valueWIthCGPoint:startPoint];</div><div class=\"line\">    <span class=\"comment\">// 动画结束位置</span></div><div class=\"line\">    baseAnimation.toValue = [<span class=\"built_in\">NSValue</span> valueWithCGPoint:endPoint];</div><div class=\"line\">    <span class=\"comment\">// 动画执行时长</span></div><div class=\"line\">    <span class=\"comment\">// baseAnimation.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseIn)//加速运动</span></div><div class=\"line\">    <span class=\"comment\">// baseAnimation.timingFunction = CAMediaTimingFunction(controlPoints: 0.5, 0, 0.9, 0.7)//自定义加速的曲线参数</span></div><div class=\"line\">    baseAnimation.duration = <span class=\"number\">1.0</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 设置动画执行测试 baseAnimation.repeatCount = 1;</span></div><div class=\"line\">    <span class=\"comment\">// 在动画中存储一些必要数据</span></div><div class=\"line\">    [baseAnimation setValue:[<span class=\"built_in\">NSValue</span> valueWithCGPoint:endPoint] forKey:<span class=\"string\">@\"redView\"</span>];</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 避免动画执行后回复位</span></div><div class=\"line\">    baseAnimation.removedOnCompletion = <span class=\"literal\">false</span>;</div><div class=\"line\">    baseAnimation.fillMode = kCAFillModeForwards;</div><div class=\"line\">    <span class=\"comment\">// 图层添加动画</span></div><div class=\"line\">    gesture.view.layer addAnimation:baseAnimation forKey:<span class=\"literal\">nil</span>]; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj21mos600003ik7arrb5yro1","category_id":"cj21mos670006ik7a8fnkd9eh","_id":"cj21mos6l000aik7aoiczqdlb"},{"post_id":"cj21mos650005ik7abs4npdft","category_id":"cj21mos670006ik7a8fnkd9eh","_id":"cj21mos6n000cik7ais9c7yit"},{"post_id":"cj21mos6e0007ik7a5usi7pcj","category_id":"cj21mos670006ik7a8fnkd9eh","_id":"cj21mos6o000eik7a6lcr3nje"},{"post_id":"cj21mos6f0008ik7ayjhjrasx","category_id":"cj21mos6n000dik7ati2b2ceh","_id":"cj21mos6p000fik7a8087zzmp"}],"PostTag":[],"Tag":[]}}